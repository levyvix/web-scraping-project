{"config":{"lang":["pt"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Projeto de Web Scraping com Scrapling","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do projeto de web scraping que demonstra a extra\u00e7\u00e3o de informa\u00e7\u00f5es de livros do site Books to Scrape usando a biblioteca Scrapling.</p>"},{"location":"#vis\u00e3o-geral","title":"Vis\u00e3o Geral","text":"<p>Este \u00e9 um projeto moderno de web scraping que demonstra t\u00e9cnicas de extra\u00e7\u00e3o de dados usando Python e a biblioteca Scrapling. O projeto foi desenvolvido com foco em performance, boas pr\u00e1ticas e facilidade de uso.</p>"},{"location":"#caracter\u00edsticas-principais","title":"Caracter\u00edsticas Principais","text":"<ul> <li>Scraping Multi-threaded: Processamento concorrente para melhor performance</li> <li>Suporte a Pagina\u00e7\u00e3o: Capacidade de extrair dados de m\u00faltiplas p\u00e1ginas</li> <li>Extra\u00e7\u00e3o Detalhada: Coleta informa\u00e7\u00f5es completas dos livros (t\u00edtulo, pre\u00e7o, avalia\u00e7\u00f5es, descri\u00e7\u00f5es, etc.)</li> <li>Sa\u00edda em JSON: Formato estruturado para os dados extra\u00eddos</li> <li>Logging Abrangente: Sistema de logs detalhado com Loguru</li> <li>Barras de Progresso: Acompanhamento visual do progresso com tqdm</li> </ul>"},{"location":"#navega\u00e7\u00e3o-r\u00e1pida","title":"Navega\u00e7\u00e3o R\u00e1pida","text":"<ul> <li>\ud83d\udce6 Instala\u00e7\u00e3o - Como instalar e configurar o projeto</li> <li>\ud83d\ude80 Uso - Exemplos de uso e refer\u00eancia da CLI</li> <li>\ud83d\udc68\u200d\ud83d\udcbb Desenvolvimento - Guia para contribuidores</li> <li>\ud83d\udcda Refer\u00eancia da API - Documenta\u00e7\u00e3o do c\u00f3digo</li> <li>\ud83d\udd27 Solu\u00e7\u00e3o de Problemas - Problemas comuns e solu\u00e7\u00f5es</li> </ul>"},{"location":"#come\u00e7ando","title":"Come\u00e7ando","text":"<p>Para come\u00e7ar rapidamente, consulte o guia de instala\u00e7\u00e3o e depois veja os exemplos de uso.</p>"},{"location":"#contribuindo","title":"Contribuindo","text":"<p>Interessado em contribuir? Consulte nosso guia de desenvolvimento para informa\u00e7\u00f5es sobre como configurar o ambiente de desenvolvimento e nossas diretrizes de contribui\u00e7\u00e3o.</p>"},{"location":"api-reference/","title":"Refer\u00eancia da API","text":"<p>Esta se\u00e7\u00e3o fornece documenta\u00e7\u00e3o t\u00e9cnica completa das fun\u00e7\u00f5es e classes principais do projeto, gerada automaticamente a partir do c\u00f3digo fonte.</p>"},{"location":"api-reference/#vis\u00e3o-geral","title":"Vis\u00e3o Geral","text":"<p>O projeto de web scraping \u00e9 estruturado em m\u00f3dulos principais que trabalham em conjunto para extrair dados de livros do site Books to Scrape. A documenta\u00e7\u00e3o abaixo \u00e9 gerada automaticamente a partir dos docstrings do c\u00f3digo.</p>"},{"location":"api-reference/#m\u00f3dulo-principal","title":"M\u00f3dulo Principal","text":""},{"location":"api-reference/#main","title":"main","text":""},{"location":"api-reference/#main.extract_star_rating","title":"extract_star_rating","text":"<pre><code>extract_star_rating(book: Adaptor) -&gt; int\n</code></pre> <p>Extract the star rating from a book element.</p> <p>Parameters:</p> Name Type Description Default <code>book</code> <code>Adaptor</code> <p>The book element.</p> required <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>The star rating (1-5).</p> Source code in <code>main.py</code> <pre><code>def extract_star_rating(book: Adaptor) -&gt; int:\n    \"\"\"Extract the star rating from a book element.\n\n    Args:\n        book (Adaptor): The book element.\n\n    Returns:\n        int: The star rating (1-5).\n    \"\"\"\n    star_class = book.find(\"p.star-rating\")\n    if not star_class:\n        logger.warning(\"No star rating found for book.\")\n        return 0\n\n    star_class = star_class.attrib.get(\"class\", \"\")\n\n    rating_match = re.search(r\"star-rating ([A-Za-z]+)\", str(star_class))\n    if not rating_match:\n        return 0\n\n    rating_text = rating_match.group(1).lower()\n    rating_map = {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5}\n\n    return rating_map.get(rating_text, 0)\n</code></pre>"},{"location":"api-reference/#main.get_page_url","title":"get_page_url","text":"<pre><code>get_page_url(base_url: str, page_num: int) -&gt; str\n</code></pre> <p>Generate the URL for a specific page.</p> <p>Parameters:</p> Name Type Description Default <code>base_url</code> <code>str</code> <p>The base URL of the website.</p> required <code>page_num</code> <code>int</code> <p>The page number.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The URL for the specified page.</p> Source code in <code>main.py</code> <pre><code>def get_page_url(base_url: str, page_num: int) -&gt; str:\n    \"\"\"Generate the URL for a specific page.\n\n    Args:\n        base_url (str): The base URL of the website.\n        page_num (int): The page number.\n\n    Returns:\n        str: The URL for the specified page.\n    \"\"\"\n    if page_num == 1:\n        return base_url\n\n    # The URL pattern for pages on books.toscrape.com is /catalogue/page-{page_num}.html\n    return urljoin(base_url, f\"catalogue/page-{page_num}.html\")\n</code></pre>"},{"location":"api-reference/#main.get_total_pages","title":"get_total_pages","text":"<pre><code>get_total_pages(page: Adaptor, base_url: str) -&gt; int\n</code></pre> <p>Extract the total number of pages from the pagination.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Adaptor</code> <p>The page adaptor.</p> required <code>base_url</code> <code>str</code> <p>The base URL of the website.</p> required <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>The total number of pages.</p> Source code in <code>main.py</code> <pre><code>def get_total_pages(page: Adaptor, base_url: str) -&gt; int:\n    \"\"\"Extract the total number of pages from the pagination.\n\n    Args:\n        page (Adaptor): The page adaptor.\n        base_url (str): The base URL of the website.\n\n    Returns:\n        int: The total number of pages.\n    \"\"\"\n    # Try to find the pagination element\n    pager = page.find(\"ul.pager\")\n    if not pager:\n        return 1\n\n    # Look for the \"next\" button to determine if we're on the last page\n    current_page = pager.find(\"li.current\")\n    if current_page:\n        page_text = current_page.text.strip()\n        match = re.search(r\"Page (\\d+) of (\\d+)\", page_text)\n        if match:\n            return int(match.group(2))\n\n    # If we can't determine the total pages, default to 1\n    return 1\n</code></pre>"},{"location":"api-reference/#main.main","title":"main","text":"<pre><code>main(max_workers: int = 10, max_pages: int = 1) -&gt; None\n</code></pre> <p>Main function to scrape books from the website.</p> <p>Parameters:</p> Name Type Description Default <code>max_workers</code> <code>int</code> <p>Maximum number of worker threads. Defaults to 10.</p> <code>10</code> <code>max_pages</code> <code>int</code> <p>Maximum number of pages to scrape. Defaults to 1.</p> <code>1</code> Source code in <code>main.py</code> <pre><code>def main(max_workers: int = 10, max_pages: int = 1) -&gt; None:\n    \"\"\"Main function to scrape books from the website.\n\n    Args:\n        max_workers (int, optional): Maximum number of worker threads. Defaults to 10.\n        max_pages (int, optional): Maximum number of pages to scrape. Defaults to 1.\n    \"\"\"\n    base_url = \"https://books.toscrape.com/\"\n\n    logger.info(\"Starting the scraping process...\")\n\n    # Fetch the first page to determine total pages\n    logger.info(\"Fetching first page...\")\n    first_page = Fetcher.get(base_url, stealthy_headers=True)\n\n    if first_page.status != 200:\n        logger.error(f\"Failed to fetch first page. Status code: {first_page.status}\")\n        raise Exception(\"Failed to fetch first page\")\n\n    # Determine total number of pages\n    total_pages = get_total_pages(first_page, base_url)\n    logger.info(f\"Found {total_pages} pages of books\")\n\n    # Limit pages if max_pages is specified\n    if max_pages and total_pages &gt; max_pages:\n        total_pages = max_pages\n        logger.info(f\"Limiting to {max_pages} pages as specified\")\n\n    all_books = []\n\n    # Process each page\n    for page_num in range(1, total_pages + 1):\n        page_url = get_page_url(base_url, page_num)\n        logger.info(f\"Processing page {page_num}/{total_pages}: {page_url}\")\n\n        # Fetch the page\n        if page_num == 1:\n            page = first_page  # Reuse the first page we already fetched\n        else:\n            page = Fetcher.get(page_url, stealthy_headers=True)\n\n            if page.status != 200:\n                logger.error(\n                    f\"Failed to fetch page {page_num}. Status code: {page.status}\"\n                )\n                continue\n\n        # Extract books from the page\n        books: Adaptors = page.find_all(\n            \"li\", {\"class\": \"col-xs-6 col-sm-4 col-md-3 col-lg-3\"}\n        )\n\n        logger.info(f\"Found {len(books)} books on page {page_num}\")\n        if not books:\n            logger.warning(f\"No books found on page {page_num}!\")\n            continue\n\n        # Process book listings in parallel\n        with concurrent.futures.ThreadPoolExecutor(max_workers=max_workers) as executor:\n            # Create a list of futures for processing book listings\n            listing_futures = [\n                executor.submit(process_book_listing, book, base_url) for book in books\n            ]\n\n            # Process results as they complete\n            page_books: list[Dict[str, Any]] = []\n            for future in tqdm(\n                concurrent.futures.as_completed(listing_futures),\n                desc=f\"Extracting listings from page {page_num}\",\n                total=len(books),\n            ):\n                result = future.result()\n                if result:\n                    page_books.append(result)\n\n        # Process book details in parallel\n        with concurrent.futures.ThreadPoolExecutor(max_workers=max_workers) as executor:\n            # Create a list of futures for processing book details\n            detail_futures = [\n                executor.submit(process_book_details, book_data)\n                for book_data in page_books\n            ]\n\n            # Process results as they complete\n            processed_books = []\n            for future in tqdm(\n                concurrent.futures.as_completed(detail_futures),\n                desc=f\"Fetching details for page {page_num} books\",\n                total=len(page_books),\n            ):\n                processed_books.append(future.result())\n\n        # Add books from this page to the overall collection\n        all_books.extend(processed_books)\n\n        logger.success(f\"Completed processing page {page_num}\")\n\n    logger.info(f\"Total books collected: {len(all_books)}\")\n\n    # Save all books to JSON\n    logger.info(\"Saving to JSON...\")\n    save_to_json(all_books)\n\n    logger.success(\"Done!\")\n</code></pre>"},{"location":"api-reference/#main.process_book_details","title":"process_book_details","text":"<pre><code>process_book_details(\n    book_data: Dict[str, Any],\n) -&gt; Dict[str, Any]\n</code></pre> <p>Fetch and process the book detail page to extract additional information.</p> <p>Parameters:</p> Name Type Description Default <code>book_data</code> <code>Dict[str, Any]</code> <p>The basic book data from the listing.</p> required <p>Returns:</p> Type Description <code>Dict[str, Any]</code> <p>Dict[str, Any]: The enhanced book data with details.</p> Source code in <code>main.py</code> <pre><code>def process_book_details(book_data: Dict[str, Any]) -&gt; Dict[str, Any]:\n    \"\"\"Fetch and process the book detail page to extract additional information.\n\n    Args:\n        book_data (Dict[str, Any]): The basic book data from the listing.\n\n    Returns:\n        Dict[str, Any]: The enhanced book data with details.\n    \"\"\"\n    detail_url = book_data.get(\"detail_url\")\n    if not detail_url:\n        logger.warning(f\"No detail URL for book: {book_data.get('title')}\")\n        return book_data\n\n    try:\n        # Fetch the detail page\n        logger.debug(f\"Fetching details for: {book_data.get('title')}\")\n        detail_page = Fetcher.get(detail_url, stealthy_headers=True)\n\n        if detail_page.status != 200:\n            logger.warning(\n                f\"Failed to fetch detail page for {book_data.get('title')}. Status: {detail_page.status}\"\n            )\n            return book_data\n\n        # Extract product information table\n        product_info = {}\n        table_rows = detail_page.find_all(\"table.table-striped tr\")\n\n        for row in table_rows:\n            header = \"\".join(row.css(\"th::text\")).strip()\n            value = \"\".join(row.css(\"td::text\")).strip()\n            product_info[header] = value\n\n        # Extract description\n        description_elem = detail_page.find(\"div#product_description + p\")\n        description = description_elem.text.strip() if description_elem else \"\"\n\n        # Extract category\n        breadcrumb = detail_page.find(\"ul.breadcrumb\")\n        category = (\n            \"\".join(breadcrumb.find_all(\"li\")[2].css(\"a::text\")).strip()\n            if breadcrumb\n            else \"\"\n        )\n\n        # Update book data with details\n        book_data.update(\n            {\n                \"upc\": product_info.get(\"UPC\", \"\"),\n                \"product_type\": product_info.get(\"Product Type\", \"\"),\n                \"price_excl_tax\": product_info.get(\"Price (excl. tax)\", \"\"),\n                \"price_incl_tax\": product_info.get(\"Price (incl. tax)\", \"\"),\n                \"tax\": product_info.get(\"Tax\", \"\"),\n                \"availability\": product_info.get(\"Availability\", \"\"),\n                \"number_of_reviews\": product_info.get(\"Number of reviews\", \"\"),\n                \"description\": description,\n                \"category\": category,\n            }\n        )\n\n        return book_data\n\n    except Exception as e:\n        logger.error(\n            f\"Error processing detail page for {book_data.get('title')}: {str(e)}\"\n        )\n        return book_data\n</code></pre>"},{"location":"api-reference/#main.process_book_listing","title":"process_book_listing","text":"<pre><code>process_book_listing(\n    book: Adaptor, base_url: str\n) -&gt; Dict[str, Any]\n</code></pre> <p>Process a book from the listing page and extract basic data.</p> <p>Parameters:</p> Name Type Description Default <code>book</code> <code>Adaptor</code> <p>The book element.</p> required <code>base_url</code> <code>str</code> <p>The base URL of the website.</p> required <p>Returns:</p> Type Description <code>Dict[str, Any]</code> <p>Dict[str, Any]: The extracted book data.</p> Source code in <code>main.py</code> <pre><code>def process_book_listing(book: Adaptor, base_url: str) -&gt; Dict[str, Any]:\n    \"\"\"Process a book from the listing page and extract basic data.\n\n    Args:\n        book (Adaptor): The book element.\n        base_url (str): The base URL of the website.\n\n    Returns:\n        Dict[str, Any]: The extracted book data.\n    \"\"\"\n    # Extract the book URL for detailed page scraping\n    book_url_element = book.find(\"h3 &gt; a\")\n    if not book_url_element:\n        logger.warning(\"No book URL found in listing.\")\n        return {}\n\n    relative_url = book_url_element.attrib.get(\"href\", \"\")\n    if \"catalogue\" not in str(relative_url):\n        relative_url = f\"catalogue/{relative_url}\"\n    book_url = urljoin(base_url, relative_url)\n\n    # Extract data from the listing\n    # title\n    title = book_url_element.attrib.get(\"title\", \"\")\n\n    # price\n    product_price = book.find(\"div.product_price &gt; p.price_color\")\n    price = product_price.text if product_price else \"\"\n\n    # stock available\n    stock = \"\".join(\n        book.css(\n            \"p.instock.availability::text\",\n        )\n    ).strip()\n\n    # image url\n    image_url = book.find(\"div.image_container img\")\n    if image_url:\n        image_url = image_url.attrib.get(\"src\", \"\")\n        # Convert relative URL to absolute URL\n        image_url = urljoin(base_url, image_url)\n    else:\n        logger.warning(\"No image URL found for book.\")\n        image_url = \"\"\n\n    return {\n        \"title\": title,\n        \"price\": price,\n        \"stock_available\": stock,\n        \"star_rating\": extract_star_rating(book),\n        \"image_url\": image_url,\n        \"detail_url\": book_url,\n    }\n</code></pre>"},{"location":"api-reference/#main.save_to_json","title":"save_to_json","text":"<pre><code>save_to_json(\n    data: List[Dict[str, Any]], filename: str = \"books.json\"\n) -&gt; None\n</code></pre> <p>Save the extracted data to a JSON file.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>List[Dict[str, Any]]</code> <p>The data to save.</p> required <code>filename</code> <code>str</code> <p>The name of the output file. Defaults to \"books.json\".</p> <code>'books.json'</code> Source code in <code>main.py</code> <pre><code>def save_to_json(data: List[Dict[str, Any]], filename: str = \"books.json\") -&gt; None:\n    \"\"\"Save the extracted data to a JSON file.\n\n    Args:\n        data (List[Dict[str, Any]]): The data to save.\n        filename (str, optional): The name of the output file. Defaults to \"books.json\".\n    \"\"\"\n    import json\n\n    with open(filename, \"w\", encoding=\"utf-8\") as f:\n        json.dump(data, f, indent=4, ensure_ascii=False)\n</code></pre>"},{"location":"api-reference/#m\u00f3dulo-de-utilit\u00e1rios","title":"M\u00f3dulo de Utilit\u00e1rios","text":""},{"location":"api-reference/#logger","title":"Logger","text":""},{"location":"api-reference/#utils.logger","title":"utils.logger","text":""},{"location":"api-reference/#estrutura-de-dados","title":"Estrutura de Dados","text":""},{"location":"api-reference/#formato-dos-dados-de-livros","title":"Formato dos Dados de Livros","text":"<p>Os dados extra\u00eddos seguem a seguinte estrutura:</p> <pre><code>{\n    \"title\": str,                    # T\u00edtulo do livro\n    \"price\": str,                    # Pre\u00e7o formatado (ex: \"\u00a351.77\")\n    \"stock_available\": str,          # Status de estoque\n    \"star_rating\": int,              # Avalia\u00e7\u00e3o em estrelas (1-5)\n    \"image_url\": str,                # URL da imagem do livro\n    \"detail_url\": str,               # URL da p\u00e1gina de detalhes\n    \"upc\": str,                      # C\u00f3digo UPC \u00fanico\n    \"product_type\": str,             # Tipo do produto\n    \"price_excl_tax\": str,           # Pre\u00e7o sem impostos\n    \"price_incl_tax\": str,           # Pre\u00e7o com impostos\n    \"tax\": str,                      # Valor do imposto\n    \"availability\": str,             # Disponibilidade detalhada\n    \"number_of_reviews\": str,        # N\u00famero de avalia\u00e7\u00f5es\n    \"description\": str,              # Descri\u00e7\u00e3o completa\n    \"category\": str                  # Categoria do livro\n}</code></pre>"},{"location":"api-reference/#exemplos-de-uso","title":"Exemplos de Uso","text":""},{"location":"api-reference/#uso-b\u00e1sico-via-cli","title":"Uso B\u00e1sico via CLI","text":"<pre><code># Scraping b\u00e1sico (1 p\u00e1gina, 10 threads)\nuv run main.py\n\n# Scraping personalizado\nuv run main.py --threads 15 --pages 5\n\n# Ver ajuda com todas as op\u00e7\u00f5es\nuv run main.py --help</code></pre>"},{"location":"api-reference/#uso-program\u00e1tico","title":"Uso Program\u00e1tico","text":"<pre><code>from main import main, process_book_details, get_total_pages, save_to_json\nfrom scrapling.fetchers import Fetcher\n\n# Executar scraping com par\u00e2metros personalizados\nmain(max_workers=15, max_pages=3)\n\n# Exemplo de uso individual das fun\u00e7\u00f5es\nbase_url = \"https://books.toscrape.com/\"\npage = Fetcher.get(base_url, stealthy_headers=True)\n\n# Obter n\u00famero total de p\u00e1ginas\ntotal_pages = get_total_pages(page, base_url)\nprint(f\"Total de p\u00e1ginas: {total_pages}\")\n\n# Processar detalhes de um livro espec\u00edfico\nbook_data = {\n    \"title\": \"Example Book\",\n    \"detail_url\": \"https://books.toscrape.com/catalogue/a-light-in-the-attic_1000/index.html\"\n}\nenhanced_data = process_book_details(book_data)\nprint(f\"T\u00edtulo: {enhanced_data['title']}\")\nprint(f\"Descri\u00e7\u00e3o: {enhanced_data['description']}\")\n\n# Salvar dados em JSON\nbooks_data = [enhanced_data]\nsave_to_json(books_data, \"my_books.json\")</code></pre>"},{"location":"api-reference/#integra\u00e7\u00e3o-com-logging","title":"Integra\u00e7\u00e3o com Logging","text":"<pre><code>from utils.logger import logger\n\n# O logger est\u00e1 pr\u00e9-configurado e pronto para uso\nlogger.info(\"Iniciando processo personalizado\")\nlogger.warning(\"Aviso importante\")\nlogger.error(\"Erro encontrado\")\n\n# Exemplo de uso em uma fun\u00e7\u00e3o personalizada\ndef custom_scraping_function():\n    logger.info(\"Iniciando scraping personalizado\")\n    try:\n        # Seu c\u00f3digo aqui\n        result = some_operation()\n        logger.success(\"Opera\u00e7\u00e3o conclu\u00edda com sucesso\")\n        return result\n    except Exception as e:\n        logger.error(f\"Erro durante o scraping: {e}\")\n        raise</code></pre>"},{"location":"api-reference/#exemplo-de-processamento-de-avalia\u00e7\u00f5es","title":"Exemplo de Processamento de Avalia\u00e7\u00f5es","text":"<pre><code>from main import extract_star_rating\nfrom scrapling.fetchers import Fetcher\n\n# Exemplo de extra\u00e7\u00e3o de avalia\u00e7\u00e3o de um livro\nurl = \"https://books.toscrape.com/catalogue/a-light-in-the-attic_1000/index.html\"\npage = Fetcher.get(url, stealthy_headers=True)\nbook_element = page.find(\"article.product_page\")\n\nif book_element:\n    rating = extract_star_rating(book_element)\n    print(f\"Avalia\u00e7\u00e3o: {rating} estrelas\")</code></pre>"},{"location":"api-reference/#tratamento-de-erros","title":"Tratamento de Erros","text":"<p>O projeto implementa tratamento robusto de erros:</p> <ul> <li>Erros de Rede: Logs detalhados e continua\u00e7\u00e3o do processamento</li> <li>Parsing de HTML: Valida\u00e7\u00e3o de elementos antes da extra\u00e7\u00e3o</li> <li>Threading: Tratamento de exce\u00e7\u00f5es em threads individuais</li> <li>File I/O: Verifica\u00e7\u00e3o de permiss\u00f5es e tratamento de erros de escrita</li> </ul>"},{"location":"api-reference/#performance-e-concorr\u00eancia","title":"Performance e Concorr\u00eancia","text":""},{"location":"api-reference/#caracter\u00edsticas-de-performance","title":"Caracter\u00edsticas de Performance","text":"<ul> <li>Threading: Uso de <code>concurrent.futures.ThreadPoolExecutor</code> para processamento paralelo</li> <li>Pool de Threads: Configur\u00e1vel via par\u00e2metro <code>max_workers</code></li> <li>Progress Tracking: Barras de progresso com <code>tqdm</code> para feedback visual</li> <li>Processamento em Lote: Separa\u00e7\u00e3o entre extra\u00e7\u00e3o de listagens e detalhes</li> </ul>"},{"location":"api-reference/#otimiza\u00e7\u00f5es-implementadas","title":"Otimiza\u00e7\u00f5es Implementadas","text":"<ul> <li>Headers stealth para evitar bloqueios</li> <li>Reutiliza\u00e7\u00e3o de conex\u00f5es HTTP</li> <li>Processamento paralelo de p\u00e1ginas e detalhes</li> <li>Logging estruturado para debugging</li> </ul>"},{"location":"api-reference/#pr\u00f3ximos-passos","title":"Pr\u00f3ximos Passos","text":"<ul> <li>Consulte o guia de desenvolvimento para contribuir</li> <li>Veja solu\u00e7\u00e3o de problemas para issues comuns</li> <li>Confira os exemplos de uso para casos pr\u00e1ticos</li> </ul>"},{"location":"development/","title":"Desenvolvimento","text":"<p>Guia completo para desenvolvedores que desejam contribuir com o projeto.</p>"},{"location":"development/#configura\u00e7\u00e3o-do-ambiente-de-desenvolvimento","title":"Configura\u00e7\u00e3o do Ambiente de Desenvolvimento","text":""},{"location":"development/#1-prepara\u00e7\u00e3o-inicial","title":"1. Prepara\u00e7\u00e3o Inicial","text":"<pre><code># Clone o reposit\u00f3rio\ngit clone &lt;repository-url&gt;\ncd &lt;project-directory&gt;\n\n# Instale todas as depend\u00eancias (incluindo desenvolvimento)\nuv sync --all-groups</code></pre>"},{"location":"development/#2-ferramentas-de-desenvolvimento","title":"2. Ferramentas de Desenvolvimento","text":"<p>O projeto usa as seguintes ferramentas:</p> <ul> <li>pytest - Framework de testes</li> <li>pytest-cov - Relat\u00f3rios de cobertura</li> <li>ruff - Linter e formatador</li> <li>taskipy - Executor de tarefas</li> </ul>"},{"location":"development/#3-comandos-de-desenvolvimento","title":"3. Comandos de Desenvolvimento","text":"<pre><code># Executar testes com cobertura\nuv run task test\n\n# Verificar c\u00f3digo com linter\nuv run task lint\n\n# Formatar c\u00f3digo\nuv run task format\n\n# Ou usar pytest diretamente\nuv run pytest --cov=. --cov-report=html</code></pre>"},{"location":"development/#estrutura-detalhada-do-projeto","title":"Estrutura Detalhada do Projeto","text":""},{"location":"development/#vis\u00e3o-geral-da-arquitetura","title":"Vis\u00e3o Geral da Arquitetura","text":"<pre><code>.\n\u251c\u2500\u2500 main.py                     # \ud83c\udfaf Script principal com CLI e l\u00f3gica de scraping\n\u251c\u2500\u2500 books.json                  # \ud83d\udcc4 Arquivo de sa\u00edda (gerado automaticamente)\n\u251c\u2500\u2500 pyproject.toml             # \u2699\ufe0f Configura\u00e7\u00e3o central do projeto\n\u251c\u2500\u2500 uv.lock                    # \ud83d\udd12 Depend\u00eancias bloqueadas (n\u00e3o editar)\n\u251c\u2500\u2500 .python-version            # \ud83d\udc0d Vers\u00e3o do Python especificada\n\u251c\u2500\u2500 pytest.ini                # \ud83e\uddea Configura\u00e7\u00e3o de testes\n\u251c\u2500\u2500 .pre-commit-config.yaml    # \ud83d\udd0d Hooks de qualidade de c\u00f3digo\n\u251c\u2500\u2500 launch.json                # \ud83d\udc1b Configura\u00e7\u00e3o de debug VS Code\n\u251c\u2500\u2500 utils/                     # \ud83d\udee0\ufe0f M\u00f3dulos utilit\u00e1rios\n\u2502   \u251c\u2500\u2500 __init__.py           # Inicializa\u00e7\u00e3o do m\u00f3dulo\n\u2502   \u2514\u2500\u2500 logger.py             # Configura\u00e7\u00e3o centralizada do Loguru\n\u251c\u2500\u2500 tests/                     # \ud83e\uddea Su\u00edte completa de testes\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 conftest.py           # Configura\u00e7\u00f5es e fixtures globais\n\u2502   \u251c\u2500\u2500 fixtures/             # Dados de teste e mocks\n\u2502   \u2514\u2500\u2500 test_main/            # Testes espec\u00edficos do main.py\n\u2502       \u251c\u2500\u2500 test_cli.py       # Testes da interface CLI\n\u2502       \u251c\u2500\u2500 test_main_function.py  # Testes da fun\u00e7\u00e3o principal\n\u2502       \u251c\u2500\u2500 test_get_page_url.py   # Testes de gera\u00e7\u00e3o de URLs\n\u2502       \u251c\u2500\u2500 test_get_total_pages.py # Testes de pagina\u00e7\u00e3o\n\u2502       \u251c\u2500\u2500 test_process_book_details.py # Testes de detalhes\n\u2502       \u251c\u2500\u2500 test_integration.py     # Testes de integra\u00e7\u00e3o\n\u2502       \u2514\u2500\u2500 test_network_errors.py # Testes de erros de rede\n\u251c\u2500\u2500 logs/                      # \ud83d\udcdd Logs da aplica\u00e7\u00e3o (auto-criado)\n\u2502   \u251c\u2500\u2500 .gitkeep              # Manter diret\u00f3rio no Git\n\u2502   \u2514\u2500\u2500 app.log               # Log principal (rotacionado)\n\u251c\u2500\u2500 docs/                      # \ud83d\udcda Documenta\u00e7\u00e3o MkDocs\n\u2502   \u251c\u2500\u2500 index.md              # P\u00e1gina inicial\n\u2502   \u251c\u2500\u2500 installation.md       # Guia de instala\u00e7\u00e3o\n\u2502   \u251c\u2500\u2500 usage.md              # Guia de uso\n\u2502   \u251c\u2500\u2500 development.md        # Este arquivo\n\u2502   \u251c\u2500\u2500 api-reference.md      # Refer\u00eancia da API\n\u2502   \u251c\u2500\u2500 troubleshooting.md    # Solu\u00e7\u00e3o de problemas\n\u2502   \u2514\u2500\u2500 assets/               # Imagens e recursos\n\u251c\u2500\u2500 htmlcov/                   # \ud83d\udcca Relat\u00f3rios de cobertura (gerado)\n\u251c\u2500\u2500 .mypy_cache/              # Cache do MyPy (gerado)\n\u251c\u2500\u2500 .pytest_cache/            # Cache do pytest (gerado)\n\u251c\u2500\u2500 .ruff_cache/              # Cache do Ruff (gerado)\n\u251c\u2500\u2500 __pycache__/              # Cache do Python (gerado)\n\u2514\u2500\u2500 .venv/                    # Ambiente virtual (gerado pelo UV)\n</code></pre>"},{"location":"development/#componentes-principais","title":"Componentes Principais","text":""},{"location":"development/#1-mainpy---aplica\u00e7\u00e3o-principal","title":"1. main.py - Aplica\u00e7\u00e3o Principal","text":"<ul> <li>Fun\u00e7\u00e3o: Script principal com toda a l\u00f3gica de scraping</li> <li>Responsabilidades:</li> <li>Interface CLI com argparse</li> <li>Coordena\u00e7\u00e3o do processo de scraping</li> <li>Processamento paralelo com ThreadPoolExecutor</li> <li>Extra\u00e7\u00e3o de dados das p\u00e1ginas</li> <li>Salvamento em JSON</li> <li>Padr\u00f5es: Single file application, fun\u00e7\u00f5es com responsabilidade \u00fanica</li> </ul>"},{"location":"development/#2-utils---m\u00f3dulos-utilit\u00e1rios","title":"2. utils/ - M\u00f3dulos Utilit\u00e1rios","text":"<ul> <li>logger.py: Configura\u00e7\u00e3o centralizada do Loguru</li> <li>Rota\u00e7\u00e3o autom\u00e1tica de logs</li> <li>Formata\u00e7\u00e3o colorida para console</li> <li>N\u00edveis de log configur\u00e1veis</li> <li>Compress\u00e3o de logs antigos</li> </ul>"},{"location":"development/#3-tests---su\u00edte-de-testes","title":"3. tests/ - Su\u00edte de Testes","text":"<ul> <li>Estrutura modular: Espelha a estrutura do c\u00f3digo principal</li> <li>Fixtures: Dados de teste reutiliz\u00e1veis em <code>fixtures/</code></li> <li>Categorias: Unit, integration, error handling, CLI tests</li> <li>Cobertura: Meta de 100% de cobertura de c\u00f3digo</li> </ul>"},{"location":"development/#4-configura\u00e7\u00f5es","title":"4. Configura\u00e7\u00f5es","text":"<ul> <li>pyproject.toml: Configura\u00e7\u00e3o central (depend\u00eancias, ferramentas, tasks)</li> <li>pytest.ini: Configura\u00e7\u00e3o de testes e cobertura</li> <li>.pre-commit-config.yaml: Hooks de qualidade de c\u00f3digo</li> <li>launch.json: Configura\u00e7\u00e3o de debug para VS Code</li> </ul>"},{"location":"development/#padr\u00f5es-e-conven\u00e7\u00f5es-de-c\u00f3digo","title":"Padr\u00f5es e Conven\u00e7\u00f5es de C\u00f3digo","text":""},{"location":"development/#conven\u00e7\u00f5es-de-nomenclatura","title":"Conven\u00e7\u00f5es de Nomenclatura","text":""},{"location":"development/#arquivos-e-diret\u00f3rios","title":"Arquivos e Diret\u00f3rios","text":"<pre><code># \u2705 Correto\nmain.py\nutils/logger.py\ntests/test_main/\n\n# \u274c Incorreto\nMain.py\nutils/Logger.py\ntests/TestMain/</code></pre>"},{"location":"development/#fun\u00e7\u00f5es-e-vari\u00e1veis","title":"Fun\u00e7\u00f5es e Vari\u00e1veis","text":"<pre><code># \u2705 Correto - snake_case\ndef process_book_details(book_data: Dict[str, Any]) -&gt; Dict[str, Any]:\n    max_workers = 10\n    base_url = \"https://books.toscrape.com/\"\n    \n# \u274c Incorreto - camelCase ou PascalCase\ndef processBookDetails(bookData):\n    maxWorkers = 10\n    BaseUrl = \"https://books.toscrape.com/\"</code></pre>"},{"location":"development/#constantes","title":"Constantes","text":"<pre><code># \u2705 Correto - UPPER_CASE\nDEFAULT_MAX_WORKERS = 10\nBASE_URL = \"https://books.toscrape.com/\"\nOUTPUT_FILENAME = \"books.json\"\n\n# \u274c Incorreto\ndefault_max_workers = 10\nbase_url = \"https://books.toscrape.com/\"</code></pre>"},{"location":"development/#type-hints-obrigat\u00f3rios","title":"Type Hints Obrigat\u00f3rios","text":""},{"location":"development/#fun\u00e7\u00f5es-p\u00fablicas","title":"Fun\u00e7\u00f5es P\u00fablicas","text":"<pre><code>from typing import Dict, List, Any, Optional\n\ndef process_book_listing(book: Adaptor, base_url: str) -&gt; Dict[str, Any]:\n    \"\"\"Processa um livro da listagem e extrai dados b\u00e1sicos.\n    \n    Args:\n        book (Adaptor): Elemento do livro.\n        base_url (str): URL base do website.\n        \n    Returns:\n        Dict[str, Any]: Dados extra\u00eddos do livro.\n    \"\"\"\n    return extracted_data\n\ndef save_to_json(data: List[Dict[str, Any]], filename: str = \"books.json\") -&gt; None:\n    \"\"\"Salva dados extra\u00eddos em arquivo JSON.\"\"\"\n    pass</code></pre>"},{"location":"development/#vari\u00e1veis-complexas","title":"Vari\u00e1veis Complexas","text":"<pre><code># \u2705 Expl\u00edcito para estruturas complexas\nbooks_data: List[Dict[str, Any]] = []\nrating_map: Dict[str, int] = {\"one\": 1, \"two\": 2, \"three\": 3}\nfutures: List[concurrent.futures.Future] = []\n\n# \u2705 Opcional para tipos simples \u00f3bvios\ncount = 0  # int \u00f3bvio\ntitle = \"Book Title\"  # str \u00f3bvio</code></pre>"},{"location":"development/#documenta\u00e7\u00e3o-obrigat\u00f3ria","title":"Documenta\u00e7\u00e3o Obrigat\u00f3ria","text":""},{"location":"development/#docstrings-completas","title":"Docstrings Completas","text":"<pre><code>def extract_star_rating(book: Adaptor) -&gt; int:\n    \"\"\"Extrai a avalia\u00e7\u00e3o em estrelas de um elemento livro.\n    \n    Procura pela classe CSS 'star-rating' e converte o texto\n    da classe (One, Two, Three, etc.) para n\u00famero inteiro.\n    \n    Args:\n        book (Adaptor): Elemento do livro contendo a avalia\u00e7\u00e3o.\n        \n    Returns:\n        int: Avalia\u00e7\u00e3o de 1-5 estrelas, ou 0 se n\u00e3o encontrada.\n        \n    Example:\n        &gt;&gt;&gt; book_element = page.find(\"li.book\")\n        &gt;&gt;&gt; rating = extract_star_rating(book_element)\n        &gt;&gt;&gt; print(rating)  # 4\n        \n    Note:\n        Retorna 0 se a avalia\u00e7\u00e3o n\u00e3o for encontrada ou for inv\u00e1lida.\n    \"\"\"</code></pre>"},{"location":"development/#coment\u00e1rios-para-l\u00f3gica-complexa","title":"Coment\u00e1rios para L\u00f3gica Complexa","text":"<pre><code>def get_total_pages(page: Adaptor, base_url: str) -&gt; int:\n    # Procurar elemento de pagina\u00e7\u00e3o\n    pager = page.find(\"ul.pager\")\n    if not pager:\n        return 1\n    \n    # Extrair informa\u00e7\u00e3o da p\u00e1gina atual usando regex\n    # Formato esperado: \"Page 1 of 50\"\n    current_page = pager.find(\"li.current\")\n    if current_page:\n        page_text = current_page.text.strip()\n        match = re.search(r\"Page (\\d+) of (\\d+)\", page_text)\n        if match:\n            return int(match.group(2))  # Retorna total de p\u00e1ginas\n    \n    return 1  # Fallback se n\u00e3o conseguir determinar</code></pre>"},{"location":"development/#formata\u00e7\u00e3o-e-estilo","title":"Formata\u00e7\u00e3o e Estilo","text":""},{"location":"development/#configura\u00e7\u00e3o-ruff","title":"Configura\u00e7\u00e3o Ruff","text":"<p>O projeto usa Ruff para formata\u00e7\u00e3o autom\u00e1tica:</p> <pre><code># Verificar estilo\nuv run ruff check .\n\n# Formatar automaticamente\nuv run ruff format .\n\n# Ou usar task\nuv run task format</code></pre>"},{"location":"development/#regras-de-formata\u00e7\u00e3o","title":"Regras de Formata\u00e7\u00e3o","text":"<ul> <li>Linha m\u00e1xima: 88 caracteres (padr\u00e3o Black)</li> <li>Indenta\u00e7\u00e3o: 4 espa\u00e7os (nunca tabs)</li> <li>Strings: Aspas duplas preferenciais</li> <li>Imports: Organizados automaticamente pelo Ruff</li> </ul>"},{"location":"development/#exemplo-de-c\u00f3digo-bem-formatado","title":"Exemplo de C\u00f3digo Bem Formatado","text":"<pre><code>from scrapling.fetchers import Fetcher\nfrom scrapling.parser import Adaptors, Adaptor\nfrom utils.logger import logger\nfrom tqdm import tqdm\nimport concurrent.futures\nimport re\nfrom typing import Dict, List, Any\nfrom urllib.parse import urljoin\n\n\ndef process_book_details(book_data: Dict[str, Any]) -&gt; Dict[str, Any]:\n    \"\"\"Busca e processa p\u00e1gina de detalhes do livro.\"\"\"\n    detail_url = book_data.get(\"detail_url\")\n    if not detail_url:\n        logger.warning(f\"No detail URL for book: {book_data.get('title')}\")\n        return book_data\n    \n    try:\n        # Buscar p\u00e1gina de detalhes\n        logger.debug(f\"Fetching details for: {book_data.get('title')}\")\n        detail_page = Fetcher.get(detail_url, stealthy_headers=True)\n        \n        if detail_page.status != 200:\n            logger.warning(\n                f\"Failed to fetch detail page for {book_data.get('title')}. \"\n                f\"Status: {detail_page.status}\"\n            )\n            return book_data\n        \n        # Processar dados...\n        return enhanced_book_data\n        \n    except Exception as e:\n        logger.error(\n            f\"Error processing detail page for {book_data.get('title')}: {str(e)}\"\n        )\n        return book_data</code></pre>"},{"location":"development/#sistema-de-testes-abrangente","title":"Sistema de Testes Abrangente","text":""},{"location":"development/#executando-testes","title":"Executando Testes","text":""},{"location":"development/#comandos-b\u00e1sicos","title":"Comandos B\u00e1sicos","text":"<pre><code># Todos os testes com cobertura completa\nuv run task test\n\n# Ou diretamente com pytest\nuv run pytest --cov=. --cov-report=html\n\n# Testes espec\u00edficos por m\u00f3dulo\nuv run pytest tests/test_main/test_cli.py\n\n# Testes com sa\u00edda detalhada\nuv run pytest -v --tb=long\n\n# Testes r\u00e1pidos (sem cobertura)\nuv run pytest --no-cov</code></pre>"},{"location":"development/#comandos-avan\u00e7ados","title":"Comandos Avan\u00e7ados","text":"<pre><code># Executar apenas testes marcados\nuv run pytest -m \"unit\"           # Apenas testes unit\u00e1rios\nuv run pytest -m \"integration\"    # Apenas testes de integra\u00e7\u00e3o\nuv run pytest -m \"not slow\"       # Pular testes lentos\n\n# Executar testes em paralelo (se instalado pytest-xdist)\nuv run pytest -n auto\n\n# Parar no primeiro erro\nuv run pytest -x\n\n# Executar apenas testes que falharam na \u00faltima execu\u00e7\u00e3o\nuv run pytest --lf</code></pre>"},{"location":"development/#estrutura-de-testes","title":"Estrutura de Testes","text":""},{"location":"development/#organiza\u00e7\u00e3o-por-categoria","title":"Organiza\u00e7\u00e3o por Categoria","text":"<pre><code>tests/\n\u251c\u2500\u2500 conftest.py                    # Fixtures globais e configura\u00e7\u00e3o\n\u251c\u2500\u2500 fixtures/                     # Dados de teste\n\u2502   \u251c\u2500\u2500 mock_responses.py         # Respostas HTTP mockadas\n\u2502   \u2514\u2500\u2500 test_data.py              # Dados de exemplo\n\u2514\u2500\u2500 test_main/                    # Testes do main.py\n    \u251c\u2500\u2500 test_cli.py               # Interface de linha de comando\n    \u251c\u2500\u2500 test_main_function.py     # Fun\u00e7\u00e3o principal\n    \u251c\u2500\u2500 test_get_page_url.py      # Gera\u00e7\u00e3o de URLs\n    \u251c\u2500\u2500 test_get_total_pages.py   # L\u00f3gica de pagina\u00e7\u00e3o\n    \u251c\u2500\u2500 test_process_book_details.py  # Processamento de detalhes\n    \u251c\u2500\u2500 test_integration.py       # Testes de integra\u00e7\u00e3o\n    \u2514\u2500\u2500 test_network_errors.py    # Tratamento de erros de rede\n</code></pre>"},{"location":"development/#marcadores-de-teste-pytestini","title":"Marcadores de Teste (pytest.ini)","text":"<pre><code># Exemplo de uso de marcadores\nimport pytest\n\n@pytest.mark.unit\ndef test_extract_star_rating():\n    \"\"\"Teste unit\u00e1rio para extra\u00e7\u00e3o de avalia\u00e7\u00e3o.\"\"\"\n    pass\n\n@pytest.mark.integration\ndef test_full_scraping_workflow():\n    \"\"\"Teste de integra\u00e7\u00e3o do workflow completo.\"\"\"\n    pass\n\n@pytest.mark.network\ndef test_network_timeout_handling():\n    \"\"\"Teste de tratamento de timeout de rede.\"\"\"\n    pass\n\n@pytest.mark.slow\ndef test_large_dataset_processing():\n    \"\"\"Teste com dataset grande (execu\u00e7\u00e3o lenta).\"\"\"\n    pass</code></pre>"},{"location":"development/#escrevendo-testes-eficazes","title":"Escrevendo Testes Eficazes","text":""},{"location":"development/#estrutura-de-teste-aaa-pattern","title":"Estrutura de Teste (AAA Pattern)","text":"<pre><code>def test_process_book_listing():\n    # Arrange - Preparar dados de teste\n    mock_book = create_mock_book_element()\n    base_url = \"https://books.toscrape.com/\"\n    \n    # Act - Executar fun\u00e7\u00e3o sendo testada\n    result = process_book_listing(mock_book, base_url)\n    \n    # Assert - Verificar resultados\n    assert result[\"title\"] == \"Expected Title\"\n    assert result[\"price\"] == \"\u00a319.99\"\n    assert result[\"star_rating\"] == 4</code></pre>"},{"location":"development/#fixtures-reutiliz\u00e1veis","title":"Fixtures Reutiliz\u00e1veis","text":"<pre><code># conftest.py\nimport pytest\nfrom unittest.mock import Mock\n\n@pytest.fixture\ndef mock_book_element():\n    \"\"\"Fixture para elemento de livro mockado.\"\"\"\n    book = Mock()\n    book.find.return_value.attrib = {\"title\": \"Test Book\", \"href\": \"test.html\"}\n    return book\n\n@pytest.fixture\ndef sample_book_data():\n    \"\"\"Fixture para dados de livro de exemplo.\"\"\"\n    return {\n        \"title\": \"Test Book\",\n        \"price\": \"\u00a319.99\",\n        \"star_rating\": 4,\n        \"detail_url\": \"https://example.com/book/1\"\n    }\n\n# Uso em testes\ndef test_book_processing(mock_book_element, sample_book_data):\n    result = process_book_listing(mock_book_element, \"https://example.com\")\n    assert result[\"title\"] == sample_book_data[\"title\"]</code></pre>"},{"location":"development/#testes-de-erro-e-edge-cases","title":"Testes de Erro e Edge Cases","text":"<pre><code>def test_extract_star_rating_no_rating():\n    \"\"\"Testa comportamento quando n\u00e3o h\u00e1 avalia\u00e7\u00e3o.\"\"\"\n    mock_book = Mock()\n    mock_book.find.return_value = None\n    \n    result = extract_star_rating(mock_book)\n    \n    assert result == 0\n\ndef test_process_book_details_network_error():\n    \"\"\"Testa tratamento de erro de rede.\"\"\"\n    book_data = {\"detail_url\": \"https://invalid-url.com\"}\n    \n    with patch('main.Fetcher.get') as mock_get:\n        mock_get.side_effect = ConnectionError(\"Network error\")\n        \n        result = process_book_details(book_data)\n        \n        # Deve retornar dados originais em caso de erro\n        assert result == book_data</code></pre>"},{"location":"development/#mocking-de-depend\u00eancias-externas","title":"Mocking de Depend\u00eancias Externas","text":"<pre><code>from unittest.mock import patch, Mock\n\n@patch('main.Fetcher.get')\ndef test_successful_page_fetch(mock_get):\n    \"\"\"Testa busca bem-sucedida de p\u00e1gina.\"\"\"\n    # Configurar mock\n    mock_response = Mock()\n    mock_response.status = 200\n    mock_response.find_all.return_value = [Mock(), Mock()]\n    mock_get.return_value = mock_response\n    \n    # Executar fun\u00e7\u00e3o\n    result = main(max_workers=5, max_pages=1)\n    \n    # Verificar chamadas\n    mock_get.assert_called_once()\n    assert mock_response.find_all.called</code></pre>"},{"location":"development/#cobertura-de-c\u00f3digo","title":"Cobertura de C\u00f3digo","text":""},{"location":"development/#meta-de-cobertura","title":"Meta de Cobertura","text":"<ul> <li>Objetivo: 100% de cobertura (configurado em pytest.ini)</li> <li>M\u00ednimo aceit\u00e1vel: 95% para PRs</li> <li>Relat\u00f3rios: HTML gerado em <code>htmlcov/</code></li> </ul>"},{"location":"development/#verificar-cobertura","title":"Verificar Cobertura","text":"<pre><code># Executar testes com relat\u00f3rio de cobertura\nuv run task test\n\n# Abrir relat\u00f3rio HTML\nopen htmlcov/index.html  # macOS\nxdg-open htmlcov/index.html  # Linux\nstart htmlcov/index.html  # Windows\n\n# Ver cobertura no terminal\nuv run pytest --cov=. --cov-report=term-missing</code></pre>"},{"location":"development/#excluir-c\u00f3digo-da-cobertura","title":"Excluir C\u00f3digo da Cobertura","text":"<pre><code>def debug_function():  # pragma: no cover\n    \"\"\"Fun\u00e7\u00e3o apenas para debug, n\u00e3o testada.\"\"\"\n    print(\"Debug info\")\n\nif __name__ == \"__main__\":  # pragma: no cover\n    # Bloco de execu\u00e7\u00e3o principal\n    main()</code></pre>"},{"location":"development/#debug-e-troubleshooting","title":"Debug e Troubleshooting","text":""},{"location":"development/#configura\u00e7\u00e3o-do-vs-code","title":"Configura\u00e7\u00e3o do VS Code","text":""},{"location":"development/#launch-configuration","title":"Launch Configuration","text":"<p>O arquivo <code>launch.json</code> cont\u00e9m configura\u00e7\u00f5es pr\u00e9-definidas:</p> <pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Python: main.py com argumentos\",\n            \"type\": \"python\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/main.py\",\n            \"args\": [\"--threads\", \"5\", \"--pages\", \"2\"],\n            \"console\": \"integratedTerminal\",\n            \"cwd\": \"${workspaceFolder}\",\n            \"env\": {\n                \"PYTHONPATH\": \"${workspaceFolder}\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"development/#personalizando-debug","title":"Personalizando Debug","text":"<pre><code>// Para debug de uma p\u00e1gina espec\u00edfica\n\"args\": [\"--threads\", \"1\", \"--pages\", \"1\"]\n\n// Para debug de alta concorr\u00eancia\n\"args\": [\"--threads\", \"20\", \"--pages\", \"5\"]\n\n// Para debug sem argumentos (padr\u00f5es)\n\"args\": []\n</code></pre>"},{"location":"development/#breakpoints-estrat\u00e9gicos","title":"Breakpoints Estrat\u00e9gicos","text":"<pre><code>def process_book_details(book_data: Dict[str, Any]) -&gt; Dict[str, Any]:\n    detail_url = book_data.get(\"detail_url\")\n    \n    # \ud83d\udd34 Breakpoint aqui para verificar URLs\n    if not detail_url:\n        logger.warning(f\"No detail URL for book: {book_data.get('title')}\")\n        return book_data\n    \n    try:\n        # \ud83d\udd34 Breakpoint aqui para verificar requisi\u00e7\u00f5es\n        detail_page = Fetcher.get(detail_url, stealthy_headers=True)\n        \n        # \ud83d\udd34 Breakpoint aqui para verificar respostas\n        if detail_page.status != 200:\n            return book_data\n            \n    except Exception as e:\n        # \ud83d\udd34 Breakpoint aqui para capturar exce\u00e7\u00f5es\n        logger.error(f\"Error: {str(e)}\")\n        return book_data</code></pre>"},{"location":"development/#sistema-de-logging-avan\u00e7ado","title":"Sistema de Logging Avan\u00e7ado","text":""},{"location":"development/#configura\u00e7\u00e3o-atual-utilsloggerpy","title":"Configura\u00e7\u00e3o Atual (utils/logger.py)","text":"<pre><code>from loguru import logger\n\n# Configura\u00e7\u00e3o autom\u00e1tica com:\n# - Rota\u00e7\u00e3o por tamanho (10 MB)\n# - Compress\u00e3o de logs antigos\n# - Formata\u00e7\u00e3o colorida no console\n# - N\u00edveis configur\u00e1veis</code></pre>"},{"location":"development/#uso-eficaz-do-logging","title":"Uso Eficaz do Logging","text":"<pre><code>from utils.logger import logger\n\n# \u2705 N\u00edveis apropriados\nlogger.debug(\"Detalhes t\u00e9cnicos para desenvolvimento\")\nlogger.info(\"Informa\u00e7\u00f5es importantes do fluxo\")\nlogger.success(\"Opera\u00e7\u00e3o conclu\u00edda com sucesso\")\nlogger.warning(\"Situa\u00e7\u00e3o que merece aten\u00e7\u00e3o\")\nlogger.error(\"Erro que n\u00e3o impede continua\u00e7\u00e3o\")\nlogger.critical(\"Erro cr\u00edtico que para execu\u00e7\u00e3o\")\n\n# \u2705 Contexto \u00fatil\nlogger.info(f\"Processing page {page_num}/{total_pages}: {page_url}\")\nlogger.error(f\"Failed to fetch {url}. Status: {status}. Retrying...\")\n\n# \u2705 Dados estruturados\nlogger.info(\"Scraping completed\", extra={\n    \"total_books\": len(all_books),\n    \"pages_processed\": total_pages,\n    \"duration_seconds\": elapsed_time\n})</code></pre>"},{"location":"development/#debug-com-logs-tempor\u00e1rios","title":"Debug com Logs Tempor\u00e1rios","text":"<pre><code>def debug_book_processing(book_data):\n    # Logs tempor\u00e1rios para debug (remover depois)\n    logger.debug(f\"DEBUG: Book data keys: {list(book_data.keys())}\")\n    logger.debug(f\"DEBUG: Detail URL: {book_data.get('detail_url')}\")\n    \n    result = process_book_details(book_data)\n    \n    logger.debug(f\"DEBUG: Result keys: {list(result.keys())}\")\n    return result</code></pre>"},{"location":"development/#debugging-de-problemas-comuns","title":"Debugging de Problemas Comuns","text":""},{"location":"development/#1-problemas-de-rede","title":"1. Problemas de Rede","text":"<pre><code># Adicionar logs detalhados para requisi\u00e7\u00f5es\ndef fetch_with_debug(url):\n    logger.debug(f\"Fetching URL: {url}\")\n    try:\n        response = Fetcher.get(url, stealthy_headers=True)\n        logger.debug(f\"Response status: {response.status}\")\n        logger.debug(f\"Response headers: {dict(response.headers)}\")\n        return response\n    except Exception as e:\n        logger.error(f\"Network error for {url}: {type(e).__name__}: {e}\")\n        raise</code></pre>"},{"location":"development/#2-problemas-de-parsing","title":"2. Problemas de Parsing","text":"<pre><code>def debug_element_extraction(element, selector):\n    found = element.find(selector)\n    if not found:\n        logger.warning(f\"Selector '{selector}' not found in element\")\n        logger.debug(f\"Available elements: {[tag.name for tag in element.find_all()]}\")\n    return found</code></pre>"},{"location":"development/#3-problemas-de-concorr\u00eancia","title":"3. Problemas de Concorr\u00eancia","text":"<pre><code>import threading\n\ndef thread_safe_logging(message):\n    thread_id = threading.current_thread().ident\n    logger.debug(f\"[Thread {thread_id}] {message}\")\n\n# Usar em fun\u00e7\u00f5es executadas em threads\ndef process_book_with_debug(book_data):\n    thread_safe_logging(f\"Processing book: {book_data.get('title')}\")\n    result = process_book_details(book_data)\n    thread_safe_logging(f\"Completed book: {book_data.get('title')}\")\n    return result</code></pre>"},{"location":"development/#ferramentas-de-debug-externas","title":"Ferramentas de Debug Externas","text":""},{"location":"development/#python-debugger-pdb","title":"Python Debugger (pdb)","text":"<pre><code>import pdb\n\ndef problematic_function(data):\n    # Inserir breakpoint program\u00e1tico\n    pdb.set_trace()\n    \n    # C\u00f3digo a ser debugado\n    result = complex_processing(data)\n    return result\n\n# Comandos \u00fateis no pdb:\n# n (next) - pr\u00f3xima linha\n# s (step) - entrar em fun\u00e7\u00e3o\n# c (continue) - continuar execu\u00e7\u00e3o\n# l (list) - mostrar c\u00f3digo atual\n# p variable - imprimir vari\u00e1vel\n# pp variable - pretty print vari\u00e1vel</code></pre>"},{"location":"development/#profiling-de-performance","title":"Profiling de Performance","text":"<pre><code>import cProfile\nimport pstats\n\ndef profile_main():\n    \"\"\"Executar main() com profiling.\"\"\"\n    cProfile.run('main(max_workers=10, max_pages=5)', 'profile_stats')\n    \n    # Analisar resultados\n    stats = pstats.Stats('profile_stats')\n    stats.sort_stats('cumulative')\n    stats.print_stats(20)  # Top 20 fun\u00e7\u00f5es mais lentas\n\n# Executar profiling\nif __name__ == \"__main__\":\n    profile_main()</code></pre>"},{"location":"development/#memory-profiling","title":"Memory Profiling","text":"<pre><code>from memory_profiler import profile\n\n@profile\ndef memory_intensive_function():\n    \"\"\"Fun\u00e7\u00e3o com profiling de mem\u00f3ria.\"\"\"\n    large_data = []\n    for i in range(10000):\n        large_data.append(process_book_data(sample_data))\n    return large_data\n\n# Executar com: uv run python -m memory_profiler script.py</code></pre>"},{"location":"development/#processo-de-contribui\u00e7\u00e3o","title":"Processo de Contribui\u00e7\u00e3o","text":""},{"location":"development/#workflow-de-desenvolvimento","title":"Workflow de Desenvolvimento","text":""},{"location":"development/#1-prepara\u00e7\u00e3o-inicial_1","title":"1. Prepara\u00e7\u00e3o Inicial","text":"<pre><code># Fork o reposit\u00f3rio no GitHub\n# Clone seu fork\ngit clone https://github.com/SEU_USUARIO/web-scraping-project.git\ncd web-scraping-project\n\n# Adicionar upstream para sincroniza\u00e7\u00e3o\ngit remote add upstream https://github.com/ORIGINAL_OWNER/web-scraping-project.git\n\n# Instalar depend\u00eancias de desenvolvimento\nuv sync --all-groups\n\n# Instalar pre-commit hooks\nuv run pre-commit install</code></pre>"},{"location":"development/#2-cria\u00e7\u00e3o-de-feature-branch","title":"2. Cria\u00e7\u00e3o de Feature Branch","text":"<pre><code># Sincronizar com upstream\ngit fetch upstream\ngit checkout main\ngit merge upstream/main\n\n# Criar branch para nova feature\ngit checkout -b feature/nome-da-funcionalidade\n\n# Ou para bugfix\ngit checkout -b fix/descricao-do-bug\n\n# Ou para documenta\u00e7\u00e3o\ngit checkout -b docs/melhoria-documentacao</code></pre>"},{"location":"development/#3-desenvolvimento","title":"3. Desenvolvimento","text":"<pre><code># Fazer mudan\u00e7as no c\u00f3digo\n# Executar testes frequentemente\nuv run task test\n\n# Verificar formata\u00e7\u00e3o\nuv run task format\n\n# Verificar linting\nuv run task lint\n\n# Commit das mudan\u00e7as\ngit add .\ngit commit -m \"feat: adiciona nova funcionalidade X\"</code></pre>"},{"location":"development/#4-prepara\u00e7\u00e3o-para-pr","title":"4. Prepara\u00e7\u00e3o para PR","text":"<pre><code># Sincronizar com upstream novamente\ngit fetch upstream\ngit rebase upstream/main\n\n# Push da branch\ngit push origin feature/nome-da-funcionalidade\n\n# Abrir Pull Request no GitHub</code></pre>"},{"location":"development/#padr\u00f5es-de-commit","title":"Padr\u00f5es de Commit","text":""},{"location":"development/#conventional-commits","title":"Conventional Commits","text":"<pre><code># Tipos de commit\nfeat: nova funcionalidade\nfix: corre\u00e7\u00e3o de bug\ndocs: mudan\u00e7as na documenta\u00e7\u00e3o\nstyle: formata\u00e7\u00e3o, sem mudan\u00e7a de l\u00f3gica\nrefactor: refatora\u00e7\u00e3o sem mudan\u00e7a de comportamento\ntest: adi\u00e7\u00e3o ou corre\u00e7\u00e3o de testes\nchore: mudan\u00e7as em ferramentas, configura\u00e7\u00f5es\n\n# Exemplos\ngit commit -m \"feat: adiciona suporte para m\u00faltiplos formatos de sa\u00edda\"\ngit commit -m \"fix: corrige extra\u00e7\u00e3o de avalia\u00e7\u00e3o quando elemento n\u00e3o existe\"\ngit commit -m \"docs: atualiza guia de instala\u00e7\u00e3o com troubleshooting\"\ngit commit -m \"test: adiciona testes para fun\u00e7\u00e3o extract_star_rating\"</code></pre>"},{"location":"development/#mensagens-descritivas","title":"Mensagens Descritivas","text":"<pre><code># \u2705 Bom - espec\u00edfico e claro\ngit commit -m \"fix: handle missing star rating elements gracefully\"\n\n# \u274c Ruim - vago\ngit commit -m \"fix bug\"\n\n# \u2705 Bom - explica o porqu\u00ea\ngit commit -m \"refactor: extract URL building to separate function for reusability\"\n\n# \u274c Ruim - n\u00e3o explica impacto\ngit commit -m \"change function\"</code></pre>"},{"location":"development/#diretrizes-de-qualidade","title":"Diretrizes de Qualidade","text":""},{"location":"development/#c\u00f3digo","title":"C\u00f3digo","text":"<ul> <li>Cobertura de testes: Manter 100% (m\u00ednimo 95%)</li> <li>Type hints: Obrigat\u00f3rio para fun\u00e7\u00f5es p\u00fablicas</li> <li>Docstrings: Obrigat\u00f3rio para fun\u00e7\u00f5es p\u00fablicas</li> <li>Formata\u00e7\u00e3o: Usar Ruff (autom\u00e1tico com pre-commit)</li> <li>Linting: Zero erros do Ruff</li> </ul>"},{"location":"development/#testes","title":"Testes","text":"<ul> <li>Novos recursos: Devem ter testes unit\u00e1rios e de integra\u00e7\u00e3o</li> <li>Bug fixes: Devem incluir teste que reproduz o bug</li> <li>Edge cases: Testar casos extremos e de erro</li> <li>Mocks: Usar para depend\u00eancias externas (rede, arquivos)</li> </ul>"},{"location":"development/#documenta\u00e7\u00e3o","title":"Documenta\u00e7\u00e3o","text":"<ul> <li>README: Atualizar se mudan\u00e7as afetam uso</li> <li>Docstrings: Atualizar se assinatura de fun\u00e7\u00e3o muda</li> <li>Changelog: Adicionar entrada para mudan\u00e7as significativas</li> <li>Exemplos: Atualizar se API muda</li> </ul>"},{"location":"development/#checklist-completo-para-pr","title":"Checklist Completo para PR","text":""},{"location":"development/#-antes-de-abrir-pr","title":"\u2705 Antes de Abrir PR","text":"<pre><code># Executar todos os checks\nuv run task test     # Testes passando\nuv run task lint     # Linting limpo\nuv run task format   # C\u00f3digo formatado\n\n# Verificar cobertura\nopen htmlcov/index.html\n\n# Testar instala\u00e7\u00e3o limpa\nrm -rf .venv\nuv sync --all-groups\nuv run main.py --help\n\n# Verificar documenta\u00e7\u00e3o\nuv run task docs</code></pre>"},{"location":"development/#-conte\u00fado-do-pr","title":"\u2705 Conte\u00fado do PR","text":"<ul> <li> T\u00edtulo claro: Descreve mudan\u00e7a em uma linha</li> <li> Descri\u00e7\u00e3o detalhada: Explica o que, por que, como</li> <li> Testes inclu\u00eddos: Para novas funcionalidades e fixes</li> <li> Documenta\u00e7\u00e3o atualizada: Se aplic\u00e1vel</li> <li> Breaking changes: Claramente marcadas</li> <li> Screenshots: Se mudan\u00e7as visuais</li> </ul>"},{"location":"development/#-template-de-pr","title":"\u2705 Template de PR","text":"<pre><code>## Descri\u00e7\u00e3o\nBreve descri\u00e7\u00e3o das mudan\u00e7as realizadas.\n\n## Tipo de Mudan\u00e7a\n- [ ] Bug fix (mudan\u00e7a que corrige um problema)\n- [ ] Nova funcionalidade (mudan\u00e7a que adiciona funcionalidade)\n- [ ] Breaking change (mudan\u00e7a que quebra compatibilidade)\n- [ ] Documenta\u00e7\u00e3o (mudan\u00e7a apenas na documenta\u00e7\u00e3o)\n\n## Como Testar\n1. Execute `uv sync --all-groups`\n2. Execute `uv run main.py --threads 5 --pages 2`\n3. Verifique que...\n\n## Checklist\n- [ ] Testes passando (`uv run task test`)\n- [ ] C\u00f3digo formatado (`uv run task format`)\n- [ ] Linting limpo (`uv run task lint`)\n- [ ] Documenta\u00e7\u00e3o atualizada\n- [ ] Cobertura de testes mantida\n</code></pre>"},{"location":"development/#code-review","title":"Code Review","text":""},{"location":"development/#para-reviewers","title":"Para Reviewers","text":"<ul> <li>Funcionalidade: A mudan\u00e7a resolve o problema?</li> <li>Testes: Cobertura adequada e casos relevantes?</li> <li>Performance: Impacto na performance?</li> <li>Seguran\u00e7a: Introduz vulnerabilidades?</li> <li>Manutenibilidade: C\u00f3digo f\u00e1cil de entender e manter?</li> </ul>"},{"location":"development/#para-contributors","title":"Para Contributors","text":"<ul> <li>Responda feedback: De forma construtiva e r\u00e1pida</li> <li>Fa\u00e7a mudan\u00e7as: Em commits separados para facilitar review</li> <li>Teste sugest\u00f5es: Antes de aplicar</li> <li>Seja paciente: Review leva tempo e \u00e9 importante</li> </ul>"},{"location":"development/#arquitetura-detalhada","title":"Arquitetura Detalhada","text":""},{"location":"development/#vis\u00e3o-geral-do-sistema","title":"Vis\u00e3o Geral do Sistema","text":"<pre><code>graph TD\n    A[CLI Interface] --&gt; B[Main Function]\n    B --&gt; C[Page Discovery]\n    B --&gt; D[Parallel Processing]\n    D --&gt; E[Book Listing Extraction]\n    D --&gt; F[Book Details Extraction]\n    E --&gt; G[ThreadPoolExecutor]\n    F --&gt; G\n    G --&gt; H[Data Aggregation]\n    H --&gt; I[JSON Output]\n    \n    J[Logger] --&gt; B\n    J --&gt; E\n    J --&gt; F\n    \n    K[Error Handling] --&gt; E\n    K --&gt; F\n    K --&gt; B</code></pre>"},{"location":"development/#componentes-principais_1","title":"Componentes Principais","text":""},{"location":"development/#1-cli-interface-mainpy","title":"1. CLI Interface (main.py)","text":"<pre><code># Responsabilidades:\n# - Parsing de argumentos de linha de comando\n# - Valida\u00e7\u00e3o de par\u00e2metros de entrada\n# - Chamada da fun\u00e7\u00e3o principal\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser(description=\"Web scraper with multithreading\")\n    parser.add_argument(\"--threads\", type=int, default=10)\n    parser.add_argument(\"--pages\", type=int, default=1)\n    args = parser.parse_args()\n    main(max_workers=args.threads, max_pages=args.pages)</code></pre>"},{"location":"development/#2-coordenador-principal-main-function","title":"2. Coordenador Principal (main function)","text":"<pre><code>def main(max_workers: int = 10, max_pages: int = 1) -&gt; None:\n    \"\"\"\n    Orquestra todo o processo de scraping:\n    1. Descoberta de p\u00e1ginas dispon\u00edveis\n    2. Processamento paralelo de cada p\u00e1gina\n    3. Agrega\u00e7\u00e3o e salvamento de dados\n    \"\"\"</code></pre>"},{"location":"development/#3-processamento-paralelo","title":"3. Processamento Paralelo","text":"<pre><code># Duas camadas de paraleliza\u00e7\u00e3o:\n# 1. Extra\u00e7\u00e3o de listagens (r\u00e1pida)\nwith ThreadPoolExecutor(max_workers=max_workers) as executor:\n    listing_futures = [executor.submit(process_book_listing, book, base_url) \n                      for book in books]\n\n# 2. Busca de detalhes (lenta, I/O bound)\nwith ThreadPoolExecutor(max_workers=max_workers) as executor:\n    detail_futures = [executor.submit(process_book_details, book_data) \n                     for book_data in page_books]</code></pre>"},{"location":"development/#4-extra\u00e7\u00e3o-de-dados","title":"4. Extra\u00e7\u00e3o de Dados","text":"<ul> <li>Listagem: Dados b\u00e1sicos da p\u00e1gina de cat\u00e1logo</li> <li>Detalhes: Informa\u00e7\u00f5es completas da p\u00e1gina individual</li> <li>Robustez: Fallbacks para dados ausentes</li> </ul>"},{"location":"development/#5-sistema-de-logging","title":"5. Sistema de Logging","text":"<pre><code># Configura\u00e7\u00e3o centralizada em utils/logger.py\n# - Logs estruturados com contexto\n# - Rota\u00e7\u00e3o autom\u00e1tica\n# - N\u00edveis apropriados para debug/produ\u00e7\u00e3o</code></pre>"},{"location":"development/#padr\u00f5es-arquiteturais","title":"Padr\u00f5es Arquiteturais","text":""},{"location":"development/#single-responsibility-principle","title":"Single Responsibility Principle","text":"<pre><code># \u2705 Cada fun\u00e7\u00e3o tem uma responsabilidade clara\ndef extract_star_rating(book: Adaptor) -&gt; int:\n    \"\"\"Apenas extrai avalia\u00e7\u00e3o em estrelas.\"\"\"\n\ndef process_book_listing(book: Adaptor, base_url: str) -&gt; Dict[str, Any]:\n    \"\"\"Apenas processa dados da listagem.\"\"\"\n\ndef process_book_details(book_data: Dict[str, Any]) -&gt; Dict[str, Any]:\n    \"\"\"Apenas busca e processa detalhes.\"\"\"</code></pre>"},{"location":"development/#error-handling-strategy","title":"Error Handling Strategy","text":"<pre><code># Estrat\u00e9gia de degrada\u00e7\u00e3o graceful\ndef process_book_details(book_data: Dict[str, Any]) -&gt; Dict[str, Any]:\n    try:\n        # Tentar buscar detalhes\n        enhanced_data = fetch_and_process_details(book_data)\n        return enhanced_data\n    except Exception as e:\n        # Log do erro mas continua com dados b\u00e1sicos\n        logger.error(f\"Error processing details: {e}\")\n        return book_data  # Fallback para dados b\u00e1sicos</code></pre>"},{"location":"development/#separation-of-concerns","title":"Separation of Concerns","text":"<pre><code># Separa\u00e7\u00e3o clara entre:\n# 1. L\u00f3gica de neg\u00f3cio (extra\u00e7\u00e3o de dados)\n# 2. I/O operations (requisi\u00e7\u00f5es HTTP)\n# 3. Data persistence (salvamento JSON)\n# 4. User interface (CLI)\n# 5. Logging e monitoring</code></pre>"},{"location":"development/#performance-e-escalabilidade","title":"Performance e Escalabilidade","text":""},{"location":"development/#otimiza\u00e7\u00f5es-implementadas","title":"Otimiza\u00e7\u00f5es Implementadas","text":"<ul> <li>Paraleliza\u00e7\u00e3o: ThreadPoolExecutor para I/O concorrente</li> <li>Reutiliza\u00e7\u00e3o: Primeira p\u00e1gina j\u00e1 carregada \u00e9 reutilizada</li> <li>Progress tracking: tqdm para feedback visual</li> <li>Memory efficiency: Processamento por p\u00e1gina, n\u00e3o tudo em mem\u00f3ria</li> </ul>"},{"location":"development/#limita\u00e7\u00f5es-atuais","title":"Limita\u00e7\u00f5es Atuais","text":"<ul> <li>Single-threaded JSON write: Bottleneck no final</li> <li>No caching: Cada execu\u00e7\u00e3o refaz todo trabalho</li> <li>No rate limiting: Pode sobrecarregar servidor</li> <li>Memory growth: Lista cresce com n\u00famero de livros</li> </ul>"},{"location":"development/#melhorias-futuras-poss\u00edveis","title":"Melhorias Futuras Poss\u00edveis","text":"<pre><code># Poss\u00edveis extens\u00f5es:\n# 1. Cache de resultados\n# 2. Rate limiting configur\u00e1vel\n# 3. M\u00faltiplos formatos de sa\u00edda\n# 4. Resumo de execu\u00e7\u00f5es interrompidas\n# 5. Configura\u00e7\u00e3o via arquivo</code></pre>"},{"location":"development/#recursos-adicionais","title":"Recursos Adicionais","text":""},{"location":"development/#documenta\u00e7\u00e3o-t\u00e9cnica","title":"Documenta\u00e7\u00e3o T\u00e9cnica","text":"<ul> <li>API Reference: Documenta\u00e7\u00e3o detalhada de fun\u00e7\u00f5es</li> <li>Troubleshooting: Solu\u00e7\u00f5es para problemas comuns</li> <li>Usage Guide: Exemplos pr\u00e1ticos de uso</li> </ul>"},{"location":"development/#ferramentas-de-desenvolvimento","title":"Ferramentas de Desenvolvimento","text":"<pre><code># An\u00e1lise de c\u00f3digo\nuv run mypy .                    # Type checking\nuv run ruff check .              # Linting\nuv run pytest --cov=.           # Testes e cobertura\n\n# Documenta\u00e7\u00e3o\nuv run task docs                 # Servir documenta\u00e7\u00e3o localmente\nuv run task docs-build           # Build documenta\u00e7\u00e3o para deploy\n\n# Profiling e an\u00e1lise\nuv run python -m cProfile main.py --threads 10 --pages 5\nuv run python -m memory_profiler main.py</code></pre>"},{"location":"development/#comunidade-e-contribui\u00e7\u00e3o","title":"Comunidade e Contribui\u00e7\u00e3o","text":"<ul> <li>Issues: Reporte bugs e sugira melhorias</li> <li>Discussions: Participe de discuss\u00f5es t\u00e9cnicas</li> <li>Pull Requests: Contribua com c\u00f3digo seguindo as diretrizes</li> <li>Documentation: Ajude a melhorar a documenta\u00e7\u00e3o</li> </ul>"},{"location":"installation/","title":"Instala\u00e7\u00e3o","text":"<p>Este guia fornece instru\u00e7\u00f5es detalhadas para instalar e configurar o projeto de web scraping em diferentes sistemas operacionais.</p>"},{"location":"installation/#pr\u00e9-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Python 3.10 ou superior</li> <li>Git (para clonar o reposit\u00f3rio)</li> <li>UV (gerenciador de pacotes Python r\u00e1pido)</li> </ul>"},{"location":"installation/#instala\u00e7\u00e3o-passo-a-passo","title":"Instala\u00e7\u00e3o Passo a Passo","text":""},{"location":"installation/#passo-1-verificar-python","title":"Passo 1: Verificar Python","text":"<p>Primeiro, verifique se voc\u00ea tem Python 3.10+ instalado:</p> <pre><code>python --version\n# ou\npython3 --version</code></pre> <p>Se voc\u00ea n\u00e3o tem Python 3.10+, instale-o:</p>"},{"location":"installation/#windows","title":"Windows","text":"<ul> <li>Baixe do python.org</li> <li>Ou use o Microsoft Store</li> <li>Ou use Chocolatey: <code>choco install python</code></li> </ul>"},{"location":"installation/#macos","title":"macOS","text":"<ul> <li>Use Homebrew: <code>brew install python@3.10</code></li> <li>Ou baixe do python.org</li> </ul>"},{"location":"installation/#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<pre><code>sudo apt update\nsudo apt install python3.10 python3.10-pip python3.10-venv</code></pre>"},{"location":"installation/#linux-centosrhelfedora","title":"Linux (CentOS/RHEL/Fedora)","text":"<pre><code>sudo dnf install python3.10 python3.10-pip\n# ou para vers\u00f5es mais antigas\nsudo yum install python3.10 python3.10-pip</code></pre>"},{"location":"installation/#passo-2-instalar-uv","title":"Passo 2: Instalar UV","text":"<p>UV \u00e9 um gerenciador de pacotes Python extremamente r\u00e1pido. Instale-o:</p>"},{"location":"installation/#m\u00e9todo-recomendado-todos-os-sistemas","title":"M\u00e9todo Recomendado (todos os sistemas)","text":"<pre><code>pip install uv</code></pre>"},{"location":"installation/#alternativa-para-linuxmacos","title":"Alternativa para Linux/macOS","text":"<pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh</code></pre>"},{"location":"installation/#alternativa-para-windows-powershell","title":"Alternativa para Windows (PowerShell)","text":"<pre><code>powershell -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n</code></pre>"},{"location":"installation/#passo-3-clonar-o-reposit\u00f3rio","title":"Passo 3: Clonar o Reposit\u00f3rio","text":"<pre><code>git clone levyvix/web-scraping-project\ncd web-scraping-project</code></pre>"},{"location":"installation/#passo-4-instalar-depend\u00eancias","title":"Passo 4: Instalar Depend\u00eancias","text":"<pre><code># Sincronizar todas as depend\u00eancias\nuv sync\n\n# Para desenvolvimento (inclui ferramentas de teste e linting)\nuv sync --all-groups</code></pre>"},{"location":"installation/#verifica\u00e7\u00e3o-da-instala\u00e7\u00e3o","title":"Verifica\u00e7\u00e3o da Instala\u00e7\u00e3o","text":"<p>Para verificar se tudo foi instalado corretamente, execute:</p> <pre><code>uv run main.py --help</code></pre> <p>Voc\u00ea deve ver a ajuda do comando com todas as op\u00e7\u00f5es dispon\u00edveis.</p>"},{"location":"installation/#solu\u00e7\u00e3o-de-problemas-de-instala\u00e7\u00e3o","title":"Solu\u00e7\u00e3o de Problemas de Instala\u00e7\u00e3o","text":""},{"location":"installation/#problemas-comuns","title":"Problemas Comuns","text":""},{"location":"installation/#erro-python-310-n\u00e3o-encontrado","title":"Erro: Python 3.10+ n\u00e3o encontrado","text":"<p>Sintomas: <code>python: command not found</code> ou vers\u00e3o muito antiga Solu\u00e7\u00f5es: - Certifique-se de ter Python 3.10+ instalado - No Windows, verifique se Python est\u00e1 no PATH - No Linux/macOS, tente <code>python3</code> em vez de <code>python</code> - Reinstale Python seguindo as instru\u00e7\u00f5es do Passo 1</p>"},{"location":"installation/#erro-uv-n\u00e3o-encontrado","title":"Erro: UV n\u00e3o encontrado","text":"<p>Sintomas: <code>uv: command not found</code> Solu\u00e7\u00f5es: - Instale UV usando <code>pip install uv</code> - Reinicie o terminal ap\u00f3s a instala\u00e7\u00e3o - No Windows, verifique se Scripts/ est\u00e1 no PATH - Tente o m\u00e9todo de instala\u00e7\u00e3o alternativo</p>"},{"location":"installation/#problemas-de-depend\u00eancias","title":"Problemas de Depend\u00eancias","text":"<p>Sintomas: Falhas durante <code>uv sync</code> Solu\u00e7\u00f5es: - Tente <code>uv sync --refresh</code> para limpar o cache - Verifique se o arquivo <code>uv.lock</code> n\u00e3o foi corrompido - Delete <code>.venv/</code> e execute <code>uv sync</code> novamente - Verifique sua conex\u00e3o com a internet</p>"},{"location":"installation/#problemas-de-permiss\u00e3o-linuxmacos","title":"Problemas de Permiss\u00e3o (Linux/macOS)","text":"<p>Sintomas: <code>Permission denied</code> durante instala\u00e7\u00e3o Solu\u00e7\u00f5es: - Use <code>sudo</code> apenas se necess\u00e1rio - Considere usar ambientes virtuais - Verifique permiss\u00f5es do diret\u00f3rio: <code>ls -la</code></p>"},{"location":"installation/#problemas-de-proxyfirewall","title":"Problemas de Proxy/Firewall","text":"<p>Sintomas: Timeouts ou falhas de conex\u00e3o Solu\u00e7\u00f5es: - Configure proxy: <code>uv sync --proxy http://proxy:port</code> - Verifique configura\u00e7\u00f5es de firewall - Use rede diferente se poss\u00edvel</p>"},{"location":"installation/#problemas-espec\u00edficos-do-windows","title":"Problemas Espec\u00edficos do Windows","text":"<p>Sintomas: Erros de codifica\u00e7\u00e3o ou paths longos Solu\u00e7\u00f5es: - Execute como Administrador se necess\u00e1rio - Habilite paths longos no Windows - Use PowerShell em vez do CMD - Verifique codifica\u00e7\u00e3o: <code>chcp 65001</code></p>"},{"location":"installation/#problemas-de-vers\u00e3o-do-python","title":"Problemas de Vers\u00e3o do Python","text":"<p>Sintomas: Incompatibilidades ou recursos n\u00e3o dispon\u00edveis Solu\u00e7\u00f5es: - Verifique: <code>python --version</code> deve ser 3.10+ - Use <code>python3.10</code> explicitamente se dispon\u00edvel - Considere usar pyenv para gerenciar vers\u00f5es</p>"},{"location":"installation/#verifica\u00e7\u00e3o-avan\u00e7ada","title":"Verifica\u00e7\u00e3o Avan\u00e7ada","text":"<p>Para diagn\u00f3stico mais detalhado:</p> <pre><code># Verificar instala\u00e7\u00e3o do Python\npython --version\nwhich python\n\n# Verificar instala\u00e7\u00e3o do UV\nuv --version\nwhich uv\n\n# Verificar depend\u00eancias instaladas\nuv pip list\n\n# Testar importa\u00e7\u00f5es principais\npython -c \"import scrapling; print('Scrapling OK')\"\npython -c \"import loguru; print('Loguru OK')\"</code></pre>"},{"location":"installation/#instala\u00e7\u00e3o-para-diferentes-ambientes","title":"Instala\u00e7\u00e3o para Diferentes Ambientes","text":""},{"location":"installation/#ambiente-de-desenvolvimento","title":"Ambiente de Desenvolvimento","text":"<p>Para contribuir com o projeto:</p> <pre><code># Clone e instale com depend\u00eancias de desenvolvimento\ngit clone levyvix/web-scraping-project\ncd web-scraping-project\nuv sync --all-groups\n\n# Instalar hooks de pre-commit (opcional)\nuv run pre-commit install</code></pre>"},{"location":"installation/#ambiente-de-produ\u00e7\u00e3o","title":"Ambiente de Produ\u00e7\u00e3o","text":"<p>Para uso apenas:</p> <pre><code># Clone e instale apenas depend\u00eancias principais\ngit clone levyvix/web-scraping-project\ncd web-scraping-project\nuv sync</code></pre>"},{"location":"installation/#usando-docker-alternativa","title":"Usando Docker (Alternativa)","text":"<p>Se preferir usar Docker:</p> <pre><code># Construir imagem (se Dockerfile dispon\u00edvel)\ndocker build -t web-scraper .\n\n# Executar container\ndocker run -v $(pwd)/output:/app/output web-scraper</code></pre>"},{"location":"installation/#configura\u00e7\u00e3o-adicional","title":"Configura\u00e7\u00e3o Adicional","text":""},{"location":"installation/#configurar-logs","title":"Configurar Logs","text":"<p>O projeto criar\u00e1 automaticamente o diret\u00f3rio <code>logs/</code>, mas voc\u00ea pode configurar:</p> <pre><code># Verificar se diret\u00f3rio de logs existe\nls -la logs/\n\n# Configurar rota\u00e7\u00e3o de logs (opcional)\n# Edite utils/logger.py se necess\u00e1rio</code></pre>"},{"location":"installation/#configurar-sa\u00edda","title":"Configurar Sa\u00edda","text":"<p>Por padr\u00e3o, os dados s\u00e3o salvos em <code>books.json</code>:</p> <pre><code># Verificar permiss\u00f5es de escrita\ntouch books.json\nls -la books.json</code></pre>"},{"location":"installation/#pr\u00f3ximos-passos","title":"Pr\u00f3ximos Passos","text":"<p>Ap\u00f3s a instala\u00e7\u00e3o bem-sucedida:</p> <ol> <li>Teste a instala\u00e7\u00e3o: <code>uv run main.py --help</code></li> <li>Execute um teste simples: <code>uv run main.py --pages 1</code></li> <li>Consulte o guia de uso para op\u00e7\u00f5es avan\u00e7adas</li> <li>Veja desenvolvimento se quiser contribuir</li> <li>Consulte solu\u00e7\u00e3o de problemas se encontrar issues</li> </ol>"},{"location":"troubleshooting/","title":"Solu\u00e7\u00e3o de Problemas","text":"<p>Guia para resolver problemas comuns e perguntas frequentes.</p>"},{"location":"troubleshooting/#problemas-de-instala\u00e7\u00e3o","title":"Problemas de Instala\u00e7\u00e3o","text":""},{"location":"troubleshooting/#python-310-n\u00e3o-encontrado","title":"Python 3.10+ n\u00e3o encontrado","text":"<p>Sintoma: Erro ao executar <code>uv sync</code> ou comandos Python</p> <p>Solu\u00e7\u00f5es: 1. Verifique a vers\u00e3o do Python: <code>python --version</code> 2. Instale Python 3.10+ do site oficial 3. Use pyenv para gerenciar vers\u00f5es: <code>pyenv install 3.10</code> 4. Certifique-se de que Python est\u00e1 no PATH</p>"},{"location":"troubleshooting/#uv-n\u00e3o-instalado-ou-n\u00e3o-encontrado","title":"UV n\u00e3o instalado ou n\u00e3o encontrado","text":"<p>Sintoma: Comando <code>uv</code> n\u00e3o reconhecido</p> <p>Solu\u00e7\u00f5es: <pre><code># Instalar UV via pip\npip install uv\n\n# Ou via curl (Linux/macOS)\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n\n# Verificar instala\u00e7\u00e3o\nuv --version</code></pre></p>"},{"location":"troubleshooting/#problemas-de-depend\u00eancias","title":"Problemas de Depend\u00eancias","text":"<p>Sintoma: Erros durante <code>uv sync</code></p> <p>Solu\u00e7\u00f5es: <pre><code># Limpar cache e reinstalar\nuv cache clean\nuv sync --refresh\n\n# Verificar arquivo uv.lock\n# Se corrompido, delete e execute uv sync novamente\nrm uv.lock\nuv sync</code></pre></p>"},{"location":"troubleshooting/#problemas-de-execu\u00e7\u00e3o","title":"Problemas de Execu\u00e7\u00e3o","text":""},{"location":"troubleshooting/#erro-de-conex\u00e3o-de-rede","title":"Erro de Conex\u00e3o de Rede","text":"<p>Sintoma: <code>ConnectionError</code> ou timeouts</p> <p>Mensagens de erro comuns: - <code>\"Failed to fetch first page. Status code: [c\u00f3digo]\"</code> - <code>\"Failed to fetch page [n\u00famero]. Status code: [c\u00f3digo]\"</code> - <code>\"Failed to fetch detail page for [t\u00edtulo]. Status: [c\u00f3digo]\"</code></p> <p>Poss\u00edveis Causas: - Problemas de conectividade - Site temporariamente indispon\u00edvel - Muitas requisi\u00e7\u00f5es simult\u00e2neas - Rate limiting pelo servidor</p> <p>Solu\u00e7\u00f5es: <pre><code># Reduzir n\u00famero de threads\nuv run main.py --threads 5\n\n# Verificar conectividade\nping books.toscrape.com\n\n# Testar com curl\ncurl -I https://books.toscrape.com/\n\n# Tentar novamente ap\u00f3s alguns minutos\n# Usar apenas 1 thread para teste\nuv run main.py --threads 1 --pages 1</code></pre></p>"},{"location":"troubleshooting/#erro-de-parsing-html","title":"Erro de Parsing HTML","text":"<p>Sintoma: Dados incompletos ou erros de extra\u00e7\u00e3o</p> <p>Mensagens de erro comuns: - <code>\"No star rating found for book.\"</code> - <code>\"No book URL found in listing.\"</code> - <code>\"No image URL found for book.\"</code> - <code>\"No detail URL for book: [t\u00edtulo]\"</code></p> <p>Diagn\u00f3stico: 1. Verifique os logs em <code>logs/app.log</code> 2. Confirme se o site n\u00e3o mudou sua estrutura 3. Teste com uma p\u00e1gina espec\u00edfica</p> <p>Solu\u00e7\u00f5es: <pre><code># Executar com menos p\u00e1ginas para teste\nuv run main.py --pages 1 --threads 1\n\n# Verificar logs detalhados\ntail -f logs/app.log\n\n# Verificar se o site est\u00e1 acess\u00edvel\ncurl -I https://books.toscrape.com/</code></pre></p>"},{"location":"troubleshooting/#problemas-de-performance","title":"Problemas de Performance","text":"<p>Sintoma: Execu\u00e7\u00e3o muito lenta</p> <p>Otimiza\u00e7\u00f5es: <pre><code># Aumentar threads (cuidado com sobrecarga)\nuv run main.py --threads 15\n\n# Verificar recursos do sistema\n# CPU e mem\u00f3ria dispon\u00edveis</code></pre></p> <p>Sintoma: Uso excessivo de mem\u00f3ria</p> <p>Solu\u00e7\u00f5es: <pre><code># Reduzir threads\nuv run main.py --threads 5\n\n# Processar menos p\u00e1ginas por vez\nuv run main.py --pages 3</code></pre></p>"},{"location":"troubleshooting/#problemas-espec\u00edficos-do-scraping","title":"Problemas Espec\u00edficos do Scraping","text":""},{"location":"troubleshooting/#falha-na-primeira-p\u00e1gina","title":"Falha na Primeira P\u00e1gina","text":"<p>Sintoma: <code>\"Failed to fetch first page\"</code> e aplica\u00e7\u00e3o para</p> <p>Causa: A aplica\u00e7\u00e3o n\u00e3o consegue acessar a p\u00e1gina inicial do site</p> <p>Solu\u00e7\u00f5es: <pre><code># Verificar se o site est\u00e1 online\ncurl -I https://books.toscrape.com/\n\n# Testar conectividade\nping books.toscrape.com\n\n# Verificar proxy/firewall\n# Se estiver atr\u00e1s de proxy corporativo, configure as vari\u00e1veis de ambiente\nexport HTTP_PROXY=http://proxy:porta\nexport HTTPS_PROXY=http://proxy:porta</code></pre></p>"},{"location":"troubleshooting/#p\u00e1ginas-sem-livros","title":"P\u00e1ginas Sem Livros","text":"<p>Sintoma: <code>\"No books found on page [n\u00famero]!\"</code> nos logs</p> <p>Poss\u00edveis Causas: - Mudan\u00e7a na estrutura HTML do site - P\u00e1gina espec\u00edfica com problemas - Seletores CSS desatualizados</p> <p>Diagn\u00f3stico: <pre><code># Verificar p\u00e1gina espec\u00edfica manualmente\ncurl https://books.toscrape.com/catalogue/page-2.html\n\n# Executar com debug para uma p\u00e1gina\nuv run main.py --pages 1 --threads 1</code></pre></p>"},{"location":"troubleshooting/#erro-de-processamento-de-detalhes","title":"Erro de Processamento de Detalhes","text":"<p>Sintoma: <code>\"Error processing detail page for [t\u00edtulo]\"</code> nos logs</p> <p>Causa: Falha ao extrair informa\u00e7\u00f5es da p\u00e1gina de detalhes do livro</p> <p>Solu\u00e7\u00f5es: 1. Verificar se a URL de detalhes est\u00e1 correta nos logs 2. Testar acesso manual \u00e0 URL problem\u00e1tica 3. Reduzir threads para evitar sobrecarga</p>"},{"location":"troubleshooting/#problemas-de-dados","title":"Problemas de Dados","text":""},{"location":"troubleshooting/#arquivo-json-corrompido","title":"Arquivo JSON corrompido","text":"<p>Sintoma: Erro ao abrir <code>books.json</code></p> <p>Solu\u00e7\u00f5es: 1. Verifique se o processo terminou corretamente 2. Procure por backups autom\u00e1ticos 3. Execute novamente o scraping</p>"},{"location":"troubleshooting/#dados-incompletos","title":"Dados incompletos","text":"<p>Sintoma: Alguns livros sem informa\u00e7\u00f5es</p> <p>Diagn\u00f3stico: <pre><code># Verificar logs para erros espec\u00edficos\ngrep \"ERROR\" logs/app.log\n\n# Contar registros no JSON\npython -c \"import json; print(len(json.load(open('books.json'))))\"</code></pre></p> <p>Solu\u00e7\u00f5es: - Execute novamente com menos threads - Verifique conectividade de rede - Analise logs para padr\u00f5es de erro</p>"},{"location":"troubleshooting/#problemas-de-desenvolvimento","title":"Problemas de Desenvolvimento","text":""},{"location":"troubleshooting/#testes-falhando","title":"Testes Falhando","text":"<p>Sintoma: <code>pytest</code> retorna erros</p> <p>Diagn\u00f3stico: <pre><code># Executar testes com sa\u00edda detalhada\nuv run pytest -v\n\n# Executar teste espec\u00edfico\nuv run pytest tests/test_main/test_specific.py -v</code></pre></p> <p>Solu\u00e7\u00f5es: 1. Verifique se todas as depend\u00eancias est\u00e3o instaladas 2. Confirme se o ambiente est\u00e1 atualizado: <code>uv sync --all-groups</code> 3. Verifique se h\u00e1 conflitos de vers\u00e3o</p>"},{"location":"troubleshooting/#problemas-de-linting","title":"Problemas de Linting","text":"<p>Sintoma: <code>ruff</code> reporta erros</p> <p>Solu\u00e7\u00f5es: <pre><code># Formatar c\u00f3digo automaticamente\nuv run task format\n\n# Verificar problemas espec\u00edficos\nuv run ruff check .\n\n# Corrigir automaticamente quando poss\u00edvel\nuv run ruff check . --fix</code></pre></p>"},{"location":"troubleshooting/#debug-n\u00e3o-funciona","title":"Debug n\u00e3o funciona","text":"<p>Sintoma: VS Code debug n\u00e3o inicia</p> <p>Verifica\u00e7\u00f5es: 1. Confirme se <code>.vscode/launch.json</code> existe 2. Verifique se a extens\u00e3o Python est\u00e1 instalada 3. Confirme se o interpretador Python est\u00e1 correto</p>"},{"location":"troubleshooting/#perguntas-frequentes-faq","title":"Perguntas Frequentes (FAQ)","text":""},{"location":"troubleshooting/#q-posso-usar-com-outros-sites","title":"Q: Posso usar com outros sites?","text":"<p>A: O c\u00f3digo \u00e9 espec\u00edfico para Books to Scrape. Para outros sites, voc\u00ea precisar\u00e1: - Modificar as URLs base (<code>base_url</code> em <code>main()</code>) - Ajustar os seletores CSS/XPath nos m\u00e9todos de extra\u00e7\u00e3o - Adaptar a estrutura de dados no <code>process_book_listing()</code> e <code>process_book_details()</code> - Modificar a l\u00f3gica de pagina\u00e7\u00e3o em <code>get_page_url()</code> e <code>get_total_pages()</code></p>"},{"location":"troubleshooting/#q-como-aumentar-a-velocidade","title":"Q: Como aumentar a velocidade?","text":"<p>A: Algumas op\u00e7\u00f5es: <pre><code># Mais threads (cuidado com rate limiting)\nuv run main.py --threads 20\n\n# Otimizar c\u00f3digo para seu caso espec\u00edfico\n# Remover campos desnecess\u00e1rios da extra\u00e7\u00e3o</code></pre></p>"},{"location":"troubleshooting/#q-o-scraping-\u00e9-legal","title":"Q: O scraping \u00e9 legal?","text":"<p>A: Books to Scrape \u00e9 um site de teste criado para praticar scraping. Para sites reais: - Verifique o arquivo robots.txt - Respeite os termos de uso - Implemente rate limiting apropriado - Considere usar APIs quando dispon\u00edveis</p>"},{"location":"troubleshooting/#q-como-contribuir-com-o-projeto","title":"Q: Como contribuir com o projeto?","text":"<p>A: Consulte o guia de desenvolvimento para: - Configurar ambiente de desenvolvimento - Entender a estrutura do c\u00f3digo - Seguir as diretrizes de contribui\u00e7\u00e3o</p>"},{"location":"troubleshooting/#q-por-que-alguns-livros-t\u00eam-rating-0","title":"Q: Por que alguns livros t\u00eam rating 0?","text":"<p>A: Isso acontece quando: - O elemento de rating n\u00e3o \u00e9 encontrado na p\u00e1gina - A classe CSS do rating n\u00e3o segue o padr\u00e3o esperado - Erro na extra\u00e7\u00e3o do texto da classe</p> <p>Verifica\u00e7\u00e3o: <pre><code># Verificar logs para warnings sobre ratings\ngrep \"No star rating found\" logs/app.log</code></pre></p>"},{"location":"troubleshooting/#q-como-interpretar-os-logs","title":"Q: Como interpretar os logs?","text":"<p>A: Estrutura dos logs em <code>logs/app.log</code>: - <code>INFO</code>: Informa\u00e7\u00f5es gerais do progresso - <code>WARNING</code>: Problemas n\u00e3o cr\u00edticos (dados faltantes) - <code>ERROR</code>: Erros que impedem processamento - <code>SUCCESS</code>: Opera\u00e7\u00f5es completadas com sucesso</p> <p>Exemplo de log normal: <pre><code>2024-01-15 10:30:15 | INFO     | main:main:200 - Starting the scraping process...\n2024-01-15 10:30:16 | SUCCESS  | main:main:250 - Done!\n</code></pre></p>"},{"location":"troubleshooting/#q-o-que-fazer-se-o-scraping-parar-no-meio","title":"Q: O que fazer se o scraping parar no meio?","text":"<p>A: Poss\u00edveis solu\u00e7\u00f5es: 1. Verificar logs para identificar o erro espec\u00edfico 2. Reduzir n\u00famero de threads: <code>--threads 5</code> 3. Processar menos p\u00e1ginas: <code>--pages 3</code> 4. Verificar espa\u00e7o em disco dispon\u00edvel 5. Reiniciar com configura\u00e7\u00f5es mais conservadoras</p>"},{"location":"troubleshooting/#q-onde-encontrar-mais-ajuda","title":"Q: Onde encontrar mais ajuda?","text":"<p>A: Recursos adicionais: - Documenta\u00e7\u00e3o da API - Guia de uso - Issues no reposit\u00f3rio GitHub - Logs detalhados em <code>logs/app.log</code></p>"},{"location":"troubleshooting/#gerenciamento-de-logs","title":"Gerenciamento de Logs","text":""},{"location":"troubleshooting/#localiza\u00e7\u00e3o-e-estrutura","title":"Localiza\u00e7\u00e3o e Estrutura","text":"<p>Os logs s\u00e3o armazenados em <code>logs/app.log</code> com as seguintes caracter\u00edsticas: - Rota\u00e7\u00e3o: Arquivo rotaciona quando atinge 10MB - Reten\u00e7\u00e3o: Logs s\u00e3o mantidos por 30 dias - Compress\u00e3o: Arquivos antigos s\u00e3o comprimidos em ZIP - Thread-safe: Seguro para uso com m\u00faltiplas threads</p>"},{"location":"troubleshooting/#comandos-\u00fateis-para-logs","title":"Comandos \u00dateis para Logs","text":"<pre><code># Ver logs em tempo real\ntail -f logs/app.log\n\n# Buscar erros espec\u00edficos\ngrep \"ERROR\" logs/app.log\n\n# Buscar warnings\ngrep \"WARNING\" logs/app.log\n\n# Ver \u00faltimas 50 linhas\ntail -n 50 logs/app.log\n\n# Contar tipos de mensagens\ngrep -c \"INFO\" logs/app.log\ngrep -c \"ERROR\" logs/app.log</code></pre>"},{"location":"troubleshooting/#limpeza-de-logs","title":"Limpeza de Logs","text":"<pre><code># Limpar logs manualmente (se necess\u00e1rio)\nrm logs/app.log*\n\n# Os logs ser\u00e3o recriados automaticamente na pr\u00f3xima execu\u00e7\u00e3o</code></pre>"},{"location":"troubleshooting/#reportando-problemas","title":"Reportando Problemas","text":""},{"location":"troubleshooting/#informa\u00e7\u00f5es-necess\u00e1rias","title":"Informa\u00e7\u00f5es Necess\u00e1rias","text":"<p>Ao reportar um problema, inclua:</p> <ol> <li>Vers\u00e3o do Python: <code>python --version</code></li> <li>Vers\u00e3o do UV: <code>uv --version</code></li> <li>Sistema Operacional: Windows/Linux/macOS</li> <li>Comando executado: Comando completo usado</li> <li>Mensagem de erro: Erro completo com stack trace</li> <li>Logs: Conte\u00fado relevante de <code>logs/app.log</code></li> </ol>"},{"location":"troubleshooting/#template-de-issue","title":"Template de Issue","text":"<p><pre><code>## Descri\u00e7\u00e3o do Problema\n[Descreva o problema claramente]\n\n## Ambiente\n- Python: [vers\u00e3o]\n- UV: [vers\u00e3o]\n- OS: [sistema operacional]\n\n## Passos para Reproduzir\n1. [Primeiro passo]\n2. [Segundo passo]\n3. [...]\n\n## Comportamento Esperado\n[O que deveria acontecer]\n\n## Comportamento Atual\n[O que est\u00e1 acontecendo]\n\n## Logs/Erros\n</code></pre> [Cole aqui os logs relevantes] <pre><code>## Informa\u00e7\u00f5es Adicionais\n[Qualquer informa\u00e7\u00e3o adicional relevante]\n</code></pre></p>"},{"location":"troubleshooting/#pr\u00f3ximos-passos","title":"Pr\u00f3ximos Passos","text":"<p>Se n\u00e3o encontrou a solu\u00e7\u00e3o aqui: 1. Consulte a documenta\u00e7\u00e3o completa 2. Verifique issues existentes no reposit\u00f3rio 3. Crie uma nova issue com informa\u00e7\u00f5es detalhadas 4. Considere contribuir com a solu\u00e7\u00e3o!</p>"},{"location":"usage/","title":"Uso","text":"<p>Este guia fornece exemplos pr\u00e1ticos e refer\u00eancia completa da interface de linha de comando para o web scraper de livros.</p>"},{"location":"usage/#in\u00edcio-r\u00e1pido","title":"In\u00edcio R\u00e1pido","text":""},{"location":"usage/#execu\u00e7\u00e3o-simples","title":"Execu\u00e7\u00e3o Simples","text":"<p>Para executar o scraping com configura\u00e7\u00f5es padr\u00e3o:</p> <pre><code>uv run main.py</code></pre> <p>O que acontece:</p> <ul> <li>Extrai dados de 1 p\u00e1gina (aproximadamente 20 livros)</li> <li>Usa 10 threads para processamento paralelo</li> <li>Salva os resultados em <code>books.json</code></li> <li>Cria logs detalhados em <code>logs/app.log</code></li> </ul>"},{"location":"usage/#primeira-execu\u00e7\u00e3o","title":"Primeira Execu\u00e7\u00e3o","text":"<p>Recomendamos testar com uma p\u00e1gina primeiro:</p> <pre><code># Teste inicial com configura\u00e7\u00f5es padr\u00e3o\nuv run main.py\n\n# Verificar se funcionou\nls -la books.json\ncat books.json | head -20</code></pre>"},{"location":"usage/#refer\u00eancia-completa-da-cli","title":"Refer\u00eancia Completa da CLI","text":""},{"location":"usage/#sintaxe","title":"Sintaxe","text":"<pre><code>uv run main.py [--threads THREADS] [--pages PAGES] [--help]</code></pre>"},{"location":"usage/#op\u00e7\u00f5es-de-comando","title":"Op\u00e7\u00f5es de Comando","text":"Op\u00e7\u00e3o Tipo Descri\u00e7\u00e3o Padr\u00e3o Exemplo <code>--threads</code> int N\u00famero de threads para processamento concorrente 10 <code>--threads 15</code> <code>--pages</code> int N\u00famero m\u00e1ximo de p\u00e1ginas para extrair 1 <code>--pages 5</code> <code>--help</code> - Mostrar ajuda completa e sair - <code>--help</code>"},{"location":"usage/#detalhes-das-op\u00e7\u00f5es","title":"Detalhes das Op\u00e7\u00f5es","text":""},{"location":"usage/#--threads-controle-de-concorr\u00eancia","title":"<code>--threads</code> (Controle de Concorr\u00eancia)","text":"<ul> <li>Fun\u00e7\u00e3o: Define quantas opera\u00e7\u00f5es paralelas executar</li> <li>Impacto: Mais threads = mais r\u00e1pido, mas maior uso de recursos</li> <li>Recomenda\u00e7\u00f5es:</li> <li>1-5 threads: Uso conservador, menor impacto no servidor</li> <li>10-15 threads: Balanceado (recomendado)</li> <li>20+ threads: Alta performance, use com cuidado</li> </ul>"},{"location":"usage/#--pages-controle-de-volume","title":"<code>--pages</code> (Controle de Volume)","text":"<ul> <li>Fun\u00e7\u00e3o: Limita quantas p\u00e1ginas do site ser\u00e3o processadas</li> <li>Cada p\u00e1gina: Aproximadamente 20 livros</li> <li>Total de livros: p\u00e1ginas \u00d7 20 (aproximadamente)</li> <li>Tempo estimado: ~30-60 segundos por p\u00e1gina (depende das threads)</li> </ul>"},{"location":"usage/#exemplos-pr\u00e1ticos","title":"Exemplos Pr\u00e1ticos","text":""},{"location":"usage/#cen\u00e1rios-de-uso-comum","title":"Cen\u00e1rios de Uso Comum","text":""},{"location":"usage/#1-teste-r\u00e1pido-desenvolvimento","title":"1. Teste R\u00e1pido (Desenvolvimento)","text":"<p><pre><code># Apenas 1 p\u00e1gina, poucas threads\nuv run main.py --threads 5 --pages 1</code></pre> Quando usar: Testando mudan\u00e7as no c\u00f3digo, verificando funcionamento</p>"},{"location":"usage/#2-coleta-moderada-uso-t\u00edpico","title":"2. Coleta Moderada (Uso T\u00edpico)","text":"<p><pre><code># 5 p\u00e1ginas, threads balanceadas\nuv run main.py --threads 10 --pages 5</code></pre> Quando usar: Coleta regular de dados, an\u00e1lises pequenas</p>"},{"location":"usage/#3-coleta-extensiva-an\u00e1lise-completa","title":"3. Coleta Extensiva (An\u00e1lise Completa)","text":"<p><pre><code># Muitas p\u00e1ginas, alta performance\nuv run main.py --threads 15 --pages 20</code></pre> Quando usar: An\u00e1lises completas, datasets grandes</p>"},{"location":"usage/#4-modo-conservador-servidor-sens\u00edvel","title":"4. Modo Conservador (Servidor Sens\u00edvel)","text":"<p><pre><code># Poucas threads, processamento lento mas seguro\nuv run main.py --threads 3 --pages 10</code></pre> Quando usar: Evitar sobrecarga do servidor, conex\u00e3o lenta</p>"},{"location":"usage/#5-m\u00e1xima-performance","title":"5. M\u00e1xima Performance","text":"<p><pre><code># Configura\u00e7\u00e3o agressiva para m\u00e1xima velocidade\nuv run main.py --threads 25 --pages 50</code></pre> Quando usar: M\u00e1quina potente, conex\u00e3o r\u00e1pida, urg\u00eancia</p>"},{"location":"usage/#exemplos-com-monitoramento","title":"Exemplos com Monitoramento","text":""},{"location":"usage/#execu\u00e7\u00e3o-com-acompanhamento-de-logs","title":"Execu\u00e7\u00e3o com Acompanhamento de Logs","text":"<pre><code># Executar em background e acompanhar logs\nuv run main.py --threads 15 --pages 10 &amp;\ntail -f logs/app.log</code></pre>"},{"location":"usage/#execu\u00e7\u00e3o-com-medi\u00e7\u00e3o-de-tempo","title":"Execu\u00e7\u00e3o com Medi\u00e7\u00e3o de Tempo","text":"<pre><code># Medir tempo total de execu\u00e7\u00e3o\ntime uv run main.py --threads 20 --pages 5</code></pre>"},{"location":"usage/#execu\u00e7\u00e3o-com-verifica\u00e7\u00e3o-de-recursos","title":"Execu\u00e7\u00e3o com Verifica\u00e7\u00e3o de Recursos","text":"<pre><code># Monitorar uso de CPU/mem\u00f3ria durante execu\u00e7\u00e3o\nhtop &amp;\nuv run main.py --threads 15 --pages 10</code></pre>"},{"location":"usage/#sa\u00edda-de-dados","title":"Sa\u00edda de Dados","text":""},{"location":"usage/#arquivo-json-principal-booksjson","title":"Arquivo JSON Principal (<code>books.json</code>)","text":"<p>Os dados s\u00e3o salvos em <code>books.json</code> com estrutura detalhada para cada livro:</p> <pre><code>[\n  {\n    \"title\": \"A Light in the Attic\",\n    \"price\": \"\u00a351.77\",\n    \"stock_available\": \"In stock (22 available)\",\n    \"star_rating\": 3,\n    \"image_url\": \"https://books.toscrape.com/media/cache/2c/da/2cdad67c44b002e7ead0cc35693c0e8b.jpg\",\n    \"detail_url\": \"https://books.toscrape.com/catalogue/a-light-in-the-attic_1000/index.html\",\n    \"upc\": \"a897fe39b1053632\",\n    \"product_type\": \"Books\",\n    \"price_excl_tax\": \"\u00a351.77\",\n    \"price_incl_tax\": \"\u00a351.77\",\n    \"tax\": \"\u00a30.00\",\n    \"availability\": \"In stock (22 available)\",\n    \"number_of_reviews\": \"0\",\n    \"description\": \"It's hard to imagine a world without A Light in the Attic...\",\n    \"category\": \"Poetry\"\n  }\n]\n</code></pre>"},{"location":"usage/#campos-dispon\u00edveis","title":"Campos Dispon\u00edveis","text":"Campo Tipo Descri\u00e7\u00e3o Exemplo <code>title</code> string T\u00edtulo do livro \"A Light in the Attic\" <code>price</code> string Pre\u00e7o com s\u00edmbolo \"\u00a351.77\" <code>stock_available</code> string Status de estoque \"In stock (22 available)\" <code>star_rating</code> int Avalia\u00e7\u00e3o (1-5 estrelas) 3 <code>image_url</code> string URL da capa \"https://...\" <code>detail_url</code> string URL da p\u00e1gina do livro \"https://...\" <code>upc</code> string C\u00f3digo \u00fanico do produto \"a897fe39b1053632\" <code>product_type</code> string Tipo de produto \"Books\" <code>price_excl_tax</code> string Pre\u00e7o sem impostos \"\u00a351.77\" <code>price_incl_tax</code> string Pre\u00e7o com impostos \"\u00a351.77\" <code>tax</code> string Valor do imposto \"\u00a30.00\" <code>availability</code> string Disponibilidade detalhada \"In stock (22 available)\" <code>number_of_reviews</code> string N\u00famero de avalia\u00e7\u00f5es \"0\" <code>description</code> string Descri\u00e7\u00e3o do livro \"It's hard to imagine...\" <code>category</code> string Categoria do livro \"Poetry\""},{"location":"usage/#logs-detalhados-logsapplog","title":"Logs Detalhados (<code>logs/app.log</code>)","text":"<p>Os logs incluem informa\u00e7\u00f5es completas sobre:</p>"},{"location":"usage/#informa\u00e7\u00f5es-de-progresso","title":"Informa\u00e7\u00f5es de Progresso","text":"<pre><code>2024-01-15 10:30:15 | INFO | Starting the scraping process...\n2024-01-15 10:30:16 | INFO | Found 50 pages of books\n2024-01-15 10:30:16 | INFO | Limiting to 5 pages as specified\n2024-01-15 10:30:17 | INFO | Processing page 1/5: https://books.toscrape.com/\n</code></pre>"},{"location":"usage/#estat\u00edsticas-de-performance","title":"Estat\u00edsticas de Performance","text":"<pre><code>2024-01-15 10:30:20 | INFO | Found 20 books on page 1\n2024-01-15 10:30:25 | SUCCESS | Completed processing page 1\n2024-01-15 10:35:30 | INFO | Total books collected: 100\n</code></pre>"},{"location":"usage/#erros-e-avisos","title":"Erros e Avisos","text":"<pre><code>2024-01-15 10:30:22 | WARNING | No star rating found for book.\n2024-01-15 10:30:23 | ERROR | Error processing detail page for Book Title: Connection timeout\n</code></pre>"},{"location":"usage/#verifica\u00e7\u00e3o-da-sa\u00edda","title":"Verifica\u00e7\u00e3o da Sa\u00edda","text":""},{"location":"usage/#verificar-arquivo-json","title":"Verificar Arquivo JSON","text":"<pre><code># Verificar se arquivo foi criado\nls -la books.json\n\n# Ver primeiros livros\nhead -50 books.json\n\n# Contar total de livros\ncat books.json | jq length\n\n# Ver apenas t\u00edtulos\ncat books.json | jq '.[].title'</code></pre>"},{"location":"usage/#verificar-logs","title":"Verificar Logs","text":"<pre><code># Ver logs em tempo real\ntail -f logs/app.log\n\n# Ver apenas erros\ngrep ERROR logs/app.log\n\n# Ver estat\u00edsticas\ngrep \"Total books collected\" logs/app.log</code></pre>"},{"location":"usage/#boas-pr\u00e1ticas","title":"Boas Pr\u00e1ticas","text":""},{"location":"usage/#uso-respons\u00e1vel-do-web-scraping","title":"Uso Respons\u00e1vel do Web Scraping","text":""},{"location":"usage/#configura\u00e7\u00e3o-de-threads","title":"Configura\u00e7\u00e3o de Threads","text":"<pre><code># \u2705 Recomendado: Balanceado\nuv run main.py --threads 10 --pages 5\n\n# \u26a0\ufe0f Cuidado: Muitas threads podem sobrecarregar\nuv run main.py --threads 50 --pages 20\n\n# \u2705 Conservador: Para servidores sens\u00edveis\nuv run main.py --threads 3 --pages 10</code></pre>"},{"location":"usage/#respeitar-limites-do-servidor","title":"Respeitar Limites do Servidor","text":"<ul> <li>Threads moderadas: 5-15 threads s\u00e3o geralmente seguras</li> <li>Monitorar erros: Se muitos erros 429/503, reduza threads</li> <li>Pausas entre execu\u00e7\u00f5es: Aguarde entre execu\u00e7\u00f5es grandes</li> <li>Hor\u00e1rios apropriados: Evite hor\u00e1rios de pico se poss\u00edvel</li> </ul>"},{"location":"usage/#\u00e9tica-do-web-scraping","title":"\u00c9tica do Web Scraping","text":"<ul> <li>robots.txt: O site permite scraping educacional</li> <li>Uso dos dados: Apenas para fins educacionais/pesquisa</li> <li>N\u00e3o redistribuir: N\u00e3o republique os dados comercialmente</li> <li>Atribui\u00e7\u00e3o: Credite a fonte (books.toscrape.com)</li> </ul>"},{"location":"usage/#otimiza\u00e7\u00e3o-de-performance","title":"Otimiza\u00e7\u00e3o de Performance","text":""},{"location":"usage/#configura\u00e7\u00f5es-por-cen\u00e1rio","title":"Configura\u00e7\u00f5es por Cen\u00e1rio","text":"<p>M\u00e1quina Local (Desenvolvimento): <pre><code># Configura\u00e7\u00e3o balanceada para desenvolvimento\nuv run main.py --threads 8 --pages 3</code></pre></p> <p>Servidor Potente: <pre><code># Aproveitar recursos dispon\u00edveis\nuv run main.py --threads 20 --pages 15</code></pre></p> <p>Conex\u00e3o Lenta: <pre><code># Reduzir concorr\u00eancia para conex\u00f5es inst\u00e1veis\nuv run main.py --threads 5 --pages 10</code></pre></p>"},{"location":"usage/#monitoramento-durante-execu\u00e7\u00e3o","title":"Monitoramento Durante Execu\u00e7\u00e3o","text":"<p>Acompanhar Progresso: <pre><code># Terminal 1: Executar scraper\nuv run main.py --threads 15 --pages 10\n\n# Terminal 2: Monitorar logs\ntail -f logs/app.log | grep -E \"(INFO|ERROR|SUCCESS)\"</code></pre></p> <p>Verificar Recursos do Sistema: <pre><code># Monitorar CPU e mem\u00f3ria\nhtop\n\n# Monitorar conex\u00f5es de rede\nnetstat -an | grep :80</code></pre></p>"},{"location":"usage/#solu\u00e7\u00e3o-de-problemas-comuns","title":"Solu\u00e7\u00e3o de Problemas Comuns","text":""},{"location":"usage/#performance-lenta","title":"Performance Lenta","text":"<pre><code># Aumentar threads gradualmente\nuv run main.py --threads 15 --pages 5  # Teste\nuv run main.py --threads 20 --pages 5  # Se OK, aumente</code></pre>"},{"location":"usage/#muitos-erros-de-conex\u00e3o","title":"Muitos Erros de Conex\u00e3o","text":"<pre><code># Reduzir threads\nuv run main.py --threads 5 --pages 10\n\n# Verificar logs para padr\u00f5es\ngrep \"ERROR\" logs/app.log | tail -20</code></pre>"},{"location":"usage/#dados-incompletos","title":"Dados Incompletos","text":"<pre><code># Verificar se todos os livros foram processados\ncat books.json | jq 'map(select(.description == \"\")) | length'\n\n# Re-executar com menos threads se necess\u00e1rio\nuv run main.py --threads 8 --pages 5</code></pre>"},{"location":"usage/#automa\u00e7\u00e3o-e-scripts","title":"Automa\u00e7\u00e3o e Scripts","text":""},{"location":"usage/#script-de-coleta-di\u00e1ria","title":"Script de Coleta Di\u00e1ria","text":"<pre><code>#!/bin/bash\n# daily_scrape.sh\necho \"Iniciando coleta di\u00e1ria...\"\nuv run main.py --threads 10 --pages 5\necho \"Coleta conclu\u00edda em $(date)\"</code></pre>"},{"location":"usage/#backup-autom\u00e1tico","title":"Backup Autom\u00e1tico","text":"<pre><code># Fazer backup antes de nova execu\u00e7\u00e3o\ncp books.json \"books_backup_$(date +%Y%m%d).json\"\nuv run main.py --threads 15 --pages 10</code></pre>"},{"location":"usage/#an\u00e1lise-r\u00e1pida-dos-dados","title":"An\u00e1lise R\u00e1pida dos Dados","text":"<pre><code># Estat\u00edsticas b\u00e1sicas ap\u00f3s coleta\necho \"Total de livros: $(cat books.json | jq length)\"\necho \"Categorias \u00fanicas: $(cat books.json | jq -r '.[].category' | sort -u | wc -l)\"\necho \"Pre\u00e7o m\u00e9dio: $(cat books.json | jq -r '.[].price' | sed 's/\u00a3//' | awk '{sum+=$1} END {print sum/NR}')\"</code></pre>"},{"location":"usage/#pr\u00f3ximos-passos","title":"Pr\u00f3ximos Passos","text":"<p>Ap\u00f3s dominar o uso b\u00e1sico:</p> <ol> <li>An\u00e1lise de Dados: Use os dados coletados para an\u00e1lises</li> <li>Personaliza\u00e7\u00e3o: Consulte desenvolvimento para modificar o c\u00f3digo</li> <li>API Reference: Veja refer\u00eancia da API para entender as fun\u00e7\u00f5es</li> <li>Troubleshooting: Consulte solu\u00e7\u00e3o de problemas para issues espec\u00edficos</li> <li>Contribui\u00e7\u00e3o: Contribua com melhorias seguindo o guia de desenvolvimento</li> </ol>"}]}
